// ignore_for_file: camel_case_types

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Imported types test
class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void default_imported_types(
    int arg0,
    int arg1,
    int arg2,
    int arg3,
    int arg4,
    int arg5,
    int arg6,
    int arg7,
    int arg8,
    int arg9,
    int arg10,
    double arg11,
    double arg12,
    int arg13,
    int arg14,
  ) {
    return _default_imported_types(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
      arg5,
      arg6,
      arg7,
      arg8,
      arg9,
      arg10,
      arg11,
      arg12,
      arg13,
      arg14,
    );
  }

  late final _default_imported_typesPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.UnsignedChar,
              ffi.SignedChar,
              ffi.Char,
              ffi.UnsignedShort,
              ffi.Short,
              ffi.UnsignedInt,
              ffi.Int,
              ffi.UnsignedLong,
              ffi.Long,
              ffi.UnsignedLongLong,
              ffi.LongLong,
              ffi.Float,
              ffi.Double,
              ffi.Size,
              ffi.WChar)>>('default_imported_types');
  late final _default_imported_types = _default_imported_typesPtr.asFunction<
      void Function(int, int, int, int, int, int, int, int, int, int, int,
          double, double, int, int)>();
}
