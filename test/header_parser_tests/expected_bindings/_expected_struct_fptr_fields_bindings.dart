// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

final class S extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> func1;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int a, ffi.Int b)>>
      comparator;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Double a, ffi.Float b, ffi.Pointer<ffi.Char> c,
              ffi.Int d, ffi.LongLong e)>> veryManyArguments;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Int, ffi.Int, ffi.Int, ffi.Float, ffi.Pointer<ffi.Char>)>>
      argsDontHaveNames;

  external ArithmeticOperation operation;

  external ffi.Pointer<
          ffi.Pointer<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Int> array, ffi.Int len)>>>
      sortPtr;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.Int> array,
              ffi.Int len,
              ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int x)>>
                  evaluator)>> sortBy;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Int, ffi.Int, ffi.Char)>>
      improperlyDeclaredParams;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<ffi.Int> array,
              ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int x)>>
                  primaryEvaluator,
              ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int x)>>
                  fallbackEvaluator)>> sortByWithFallback;

  @ffi.Array.multi([2])
  external ffi.Array<
          ffi
          .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Char, ffi.Char)>>>
      manyFunctions;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int, ffi.Int)>>
              Function(ffi.Int, ffi.Int)>> functionReturningFunction;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int, ffi.Int)>>
              Function(ffi.Int, ffi.Int)>> functionReturningFunctionImproper;
}

typedef ArithmeticOperation
    = ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int a, ffi.Int b)>>;
