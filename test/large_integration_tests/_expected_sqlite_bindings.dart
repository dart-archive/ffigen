/// AUTO GENERATED FILE, DO NOT EDIT.
///
/// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings to SQLite.
class SQLite {
  /// Holds the Dynamic library.
  final ffi.DynamicLibrary _dylib;

  /// The symbols are looked up in [dynamicLibrary].
  SQLite(ffi.DynamicLibrary dynamicLibrary) : _dylib = dynamicLibrary;

  ffi.Pointer<ffi.Int8> sqlite3_libversion() {
    _sqlite3_libversion ??=
        _dylib.lookupFunction<_c_sqlite3_libversion, _dart_sqlite3_libversion>(
            'sqlite3_libversion');
    return _sqlite3_libversion();
  }

  _dart_sqlite3_libversion _sqlite3_libversion;

  ffi.Pointer<ffi.Int8> sqlite3_sourceid() {
    _sqlite3_sourceid ??=
        _dylib.lookupFunction<_c_sqlite3_sourceid, _dart_sqlite3_sourceid>(
            'sqlite3_sourceid');
    return _sqlite3_sourceid();
  }

  _dart_sqlite3_sourceid _sqlite3_sourceid;

  int sqlite3_libversion_number() {
    _sqlite3_libversion_number ??= _dylib.lookupFunction<
        _c_sqlite3_libversion_number,
        _dart_sqlite3_libversion_number>('sqlite3_libversion_number');
    return _sqlite3_libversion_number();
  }

  _dart_sqlite3_libversion_number _sqlite3_libversion_number;

  int sqlite3_compileoption_used(
    ffi.Pointer<ffi.Int8> zOptName,
  ) {
    _sqlite3_compileoption_used ??= _dylib.lookupFunction<
        _c_sqlite3_compileoption_used,
        _dart_sqlite3_compileoption_used>('sqlite3_compileoption_used');
    return _sqlite3_compileoption_used(
      zOptName,
    );
  }

  _dart_sqlite3_compileoption_used _sqlite3_compileoption_used;

  ffi.Pointer<ffi.Int8> sqlite3_compileoption_get(
    int N,
  ) {
    _sqlite3_compileoption_get ??= _dylib.lookupFunction<
        _c_sqlite3_compileoption_get,
        _dart_sqlite3_compileoption_get>('sqlite3_compileoption_get');
    return _sqlite3_compileoption_get(
      N,
    );
  }

  _dart_sqlite3_compileoption_get _sqlite3_compileoption_get;

  int sqlite3_threadsafe() {
    _sqlite3_threadsafe ??=
        _dylib.lookupFunction<_c_sqlite3_threadsafe, _dart_sqlite3_threadsafe>(
            'sqlite3_threadsafe');
    return _sqlite3_threadsafe();
  }

  _dart_sqlite3_threadsafe _sqlite3_threadsafe;

  int sqlite3_close(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_close ??= _dylib
        .lookupFunction<_c_sqlite3_close, _dart_sqlite3_close>('sqlite3_close');
    return _sqlite3_close(
      arg0,
    );
  }

  _dart_sqlite3_close _sqlite3_close;

  int sqlite3_close_v2(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_close_v2 ??=
        _dylib.lookupFunction<_c_sqlite3_close_v2, _dart_sqlite3_close_v2>(
            'sqlite3_close_v2');
    return _sqlite3_close_v2(
      arg0,
    );
  }

  _dart_sqlite3_close_v2 _sqlite3_close_v2;

  int sqlite3_exec(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> sql,
    ffi.Pointer<ffi.NativeFunction<_typedefC_13>> callback,
    ffi.Pointer<ffi.Void> arg3,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> errmsg,
  ) {
    _sqlite3_exec ??= _dylib
        .lookupFunction<_c_sqlite3_exec, _dart_sqlite3_exec>('sqlite3_exec');
    return _sqlite3_exec(
      arg0,
      sql,
      callback,
      arg3,
      errmsg,
    );
  }

  _dart_sqlite3_exec _sqlite3_exec;

  int sqlite3_initialize() {
    _sqlite3_initialize ??=
        _dylib.lookupFunction<_c_sqlite3_initialize, _dart_sqlite3_initialize>(
            'sqlite3_initialize');
    return _sqlite3_initialize();
  }

  _dart_sqlite3_initialize _sqlite3_initialize;

  int sqlite3_shutdown() {
    _sqlite3_shutdown ??=
        _dylib.lookupFunction<_c_sqlite3_shutdown, _dart_sqlite3_shutdown>(
            'sqlite3_shutdown');
    return _sqlite3_shutdown();
  }

  _dart_sqlite3_shutdown _sqlite3_shutdown;

  int sqlite3_os_init() {
    _sqlite3_os_init ??=
        _dylib.lookupFunction<_c_sqlite3_os_init, _dart_sqlite3_os_init>(
            'sqlite3_os_init');
    return _sqlite3_os_init();
  }

  _dart_sqlite3_os_init _sqlite3_os_init;

  int sqlite3_os_end() {
    _sqlite3_os_end ??=
        _dylib.lookupFunction<_c_sqlite3_os_end, _dart_sqlite3_os_end>(
            'sqlite3_os_end');
    return _sqlite3_os_end();
  }

  _dart_sqlite3_os_end _sqlite3_os_end;

  int sqlite3_config(
    int arg0,
  ) {
    _sqlite3_config ??=
        _dylib.lookupFunction<_c_sqlite3_config, _dart_sqlite3_config>(
            'sqlite3_config');
    return _sqlite3_config(
      arg0,
    );
  }

  _dart_sqlite3_config _sqlite3_config;

  int sqlite3_db_config(
    ffi.Pointer<sqlite3> arg0,
    int op,
  ) {
    _sqlite3_db_config ??=
        _dylib.lookupFunction<_c_sqlite3_db_config, _dart_sqlite3_db_config>(
            'sqlite3_db_config');
    return _sqlite3_db_config(
      arg0,
      op,
    );
  }

  _dart_sqlite3_db_config _sqlite3_db_config;

  int sqlite3_extended_result_codes(
    ffi.Pointer<sqlite3> arg0,
    int onoff,
  ) {
    _sqlite3_extended_result_codes ??= _dylib.lookupFunction<
        _c_sqlite3_extended_result_codes,
        _dart_sqlite3_extended_result_codes>('sqlite3_extended_result_codes');
    return _sqlite3_extended_result_codes(
      arg0,
      onoff,
    );
  }

  _dart_sqlite3_extended_result_codes _sqlite3_extended_result_codes;

  int sqlite3_last_insert_rowid(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_last_insert_rowid ??= _dylib.lookupFunction<
        _c_sqlite3_last_insert_rowid,
        _dart_sqlite3_last_insert_rowid>('sqlite3_last_insert_rowid');
    return _sqlite3_last_insert_rowid(
      arg0,
    );
  }

  _dart_sqlite3_last_insert_rowid _sqlite3_last_insert_rowid;

  void sqlite3_set_last_insert_rowid(
    ffi.Pointer<sqlite3> arg0,
    int arg1,
  ) {
    _sqlite3_set_last_insert_rowid ??= _dylib.lookupFunction<
        _c_sqlite3_set_last_insert_rowid,
        _dart_sqlite3_set_last_insert_rowid>('sqlite3_set_last_insert_rowid');
    return _sqlite3_set_last_insert_rowid(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_set_last_insert_rowid _sqlite3_set_last_insert_rowid;

  int sqlite3_changes(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_changes ??=
        _dylib.lookupFunction<_c_sqlite3_changes, _dart_sqlite3_changes>(
            'sqlite3_changes');
    return _sqlite3_changes(
      arg0,
    );
  }

  _dart_sqlite3_changes _sqlite3_changes;

  int sqlite3_total_changes(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_total_changes ??= _dylib.lookupFunction<_c_sqlite3_total_changes,
        _dart_sqlite3_total_changes>('sqlite3_total_changes');
    return _sqlite3_total_changes(
      arg0,
    );
  }

  _dart_sqlite3_total_changes _sqlite3_total_changes;

  void sqlite3_interrupt(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_interrupt ??=
        _dylib.lookupFunction<_c_sqlite3_interrupt, _dart_sqlite3_interrupt>(
            'sqlite3_interrupt');
    return _sqlite3_interrupt(
      arg0,
    );
  }

  _dart_sqlite3_interrupt _sqlite3_interrupt;

  int sqlite3_complete(
    ffi.Pointer<ffi.Int8> sql,
  ) {
    _sqlite3_complete ??=
        _dylib.lookupFunction<_c_sqlite3_complete, _dart_sqlite3_complete>(
            'sqlite3_complete');
    return _sqlite3_complete(
      sql,
    );
  }

  _dart_sqlite3_complete _sqlite3_complete;

  int sqlite3_complete16(
    ffi.Pointer<ffi.Void> sql,
  ) {
    _sqlite3_complete16 ??=
        _dylib.lookupFunction<_c_sqlite3_complete16, _dart_sqlite3_complete16>(
            'sqlite3_complete16');
    return _sqlite3_complete16(
      sql,
    );
  }

  _dart_sqlite3_complete16 _sqlite3_complete16;

  int sqlite3_busy_handler(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_32>> arg1,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_busy_handler ??= _dylib.lookupFunction<_c_sqlite3_busy_handler,
        _dart_sqlite3_busy_handler>('sqlite3_busy_handler');
    return _sqlite3_busy_handler(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_busy_handler _sqlite3_busy_handler;

  int sqlite3_busy_timeout(
    ffi.Pointer<sqlite3> arg0,
    int ms,
  ) {
    _sqlite3_busy_timeout ??= _dylib.lookupFunction<_c_sqlite3_busy_timeout,
        _dart_sqlite3_busy_timeout>('sqlite3_busy_timeout');
    return _sqlite3_busy_timeout(
      arg0,
      ms,
    );
  }

  _dart_sqlite3_busy_timeout _sqlite3_busy_timeout;

  int sqlite3_get_table(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSql,
    ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>> pazResult,
    ffi.Pointer<ffi.Int32> pnRow,
    ffi.Pointer<ffi.Int32> pnColumn,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrmsg,
  ) {
    _sqlite3_get_table ??=
        _dylib.lookupFunction<_c_sqlite3_get_table, _dart_sqlite3_get_table>(
            'sqlite3_get_table');
    return _sqlite3_get_table(
      db,
      zSql,
      pazResult,
      pnRow,
      pnColumn,
      pzErrmsg,
    );
  }

  _dart_sqlite3_get_table _sqlite3_get_table;

  void sqlite3_free_table(
    ffi.Pointer<ffi.Pointer<ffi.Int8>> result,
  ) {
    _sqlite3_free_table ??=
        _dylib.lookupFunction<_c_sqlite3_free_table, _dart_sqlite3_free_table>(
            'sqlite3_free_table');
    return _sqlite3_free_table(
      result,
    );
  }

  _dart_sqlite3_free_table _sqlite3_free_table;

  ffi.Pointer<ffi.Int8> sqlite3_mprintf(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_mprintf ??=
        _dylib.lookupFunction<_c_sqlite3_mprintf, _dart_sqlite3_mprintf>(
            'sqlite3_mprintf');
    return _sqlite3_mprintf(
      arg0,
    );
  }

  _dart_sqlite3_mprintf _sqlite3_mprintf;

  ffi.Pointer<ffi.Int8> sqlite3_snprintf(
    int arg0,
    ffi.Pointer<ffi.Int8> arg1,
    ffi.Pointer<ffi.Int8> arg2,
  ) {
    _sqlite3_snprintf ??=
        _dylib.lookupFunction<_c_sqlite3_snprintf, _dart_sqlite3_snprintf>(
            'sqlite3_snprintf');
    return _sqlite3_snprintf(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_snprintf _sqlite3_snprintf;

  ffi.Pointer<ffi.Void> sqlite3_malloc(
    int arg0,
  ) {
    _sqlite3_malloc ??=
        _dylib.lookupFunction<_c_sqlite3_malloc, _dart_sqlite3_malloc>(
            'sqlite3_malloc');
    return _sqlite3_malloc(
      arg0,
    );
  }

  _dart_sqlite3_malloc _sqlite3_malloc;

  ffi.Pointer<ffi.Void> sqlite3_malloc64(
    int arg0,
  ) {
    _sqlite3_malloc64 ??=
        _dylib.lookupFunction<_c_sqlite3_malloc64, _dart_sqlite3_malloc64>(
            'sqlite3_malloc64');
    return _sqlite3_malloc64(
      arg0,
    );
  }

  _dart_sqlite3_malloc64 _sqlite3_malloc64;

  ffi.Pointer<ffi.Void> sqlite3_realloc(
    ffi.Pointer<ffi.Void> arg0,
    int arg1,
  ) {
    _sqlite3_realloc ??=
        _dylib.lookupFunction<_c_sqlite3_realloc, _dart_sqlite3_realloc>(
            'sqlite3_realloc');
    return _sqlite3_realloc(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_realloc _sqlite3_realloc;

  ffi.Pointer<ffi.Void> sqlite3_realloc64(
    ffi.Pointer<ffi.Void> arg0,
    int arg1,
  ) {
    _sqlite3_realloc64 ??=
        _dylib.lookupFunction<_c_sqlite3_realloc64, _dart_sqlite3_realloc64>(
            'sqlite3_realloc64');
    return _sqlite3_realloc64(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_realloc64 _sqlite3_realloc64;

  void sqlite3_free(
    ffi.Pointer<ffi.Void> arg0,
  ) {
    _sqlite3_free ??= _dylib
        .lookupFunction<_c_sqlite3_free, _dart_sqlite3_free>('sqlite3_free');
    return _sqlite3_free(
      arg0,
    );
  }

  _dart_sqlite3_free _sqlite3_free;

  int sqlite3_msize(
    ffi.Pointer<ffi.Void> arg0,
  ) {
    _sqlite3_msize ??= _dylib
        .lookupFunction<_c_sqlite3_msize, _dart_sqlite3_msize>('sqlite3_msize');
    return _sqlite3_msize(
      arg0,
    );
  }

  _dart_sqlite3_msize _sqlite3_msize;

  int sqlite3_memory_used() {
    _sqlite3_memory_used ??= _dylib.lookupFunction<_c_sqlite3_memory_used,
        _dart_sqlite3_memory_used>('sqlite3_memory_used');
    return _sqlite3_memory_used();
  }

  _dart_sqlite3_memory_used _sqlite3_memory_used;

  int sqlite3_memory_highwater(
    int resetFlag,
  ) {
    _sqlite3_memory_highwater ??= _dylib.lookupFunction<
        _c_sqlite3_memory_highwater,
        _dart_sqlite3_memory_highwater>('sqlite3_memory_highwater');
    return _sqlite3_memory_highwater(
      resetFlag,
    );
  }

  _dart_sqlite3_memory_highwater _sqlite3_memory_highwater;

  void sqlite3_randomness(
    int N,
    ffi.Pointer<ffi.Void> P,
  ) {
    _sqlite3_randomness ??=
        _dylib.lookupFunction<_c_sqlite3_randomness, _dart_sqlite3_randomness>(
            'sqlite3_randomness');
    return _sqlite3_randomness(
      N,
      P,
    );
  }

  _dart_sqlite3_randomness _sqlite3_randomness;

  int sqlite3_set_authorizer(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_33>> xAuth,
    ffi.Pointer<ffi.Void> pUserData,
  ) {
    _sqlite3_set_authorizer ??= _dylib.lookupFunction<_c_sqlite3_set_authorizer,
        _dart_sqlite3_set_authorizer>('sqlite3_set_authorizer');
    return _sqlite3_set_authorizer(
      arg0,
      xAuth,
      pUserData,
    );
  }

  _dart_sqlite3_set_authorizer _sqlite3_set_authorizer;

  ffi.Pointer<ffi.Void> sqlite3_trace(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_34>> xTrace,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_trace ??= _dylib
        .lookupFunction<_c_sqlite3_trace, _dart_sqlite3_trace>('sqlite3_trace');
    return _sqlite3_trace(
      arg0,
      xTrace,
      arg2,
    );
  }

  _dart_sqlite3_trace _sqlite3_trace;

  ffi.Pointer<ffi.Void> sqlite3_profile(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_35>> xProfile,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_profile ??=
        _dylib.lookupFunction<_c_sqlite3_profile, _dart_sqlite3_profile>(
            'sqlite3_profile');
    return _sqlite3_profile(
      arg0,
      xProfile,
      arg2,
    );
  }

  _dart_sqlite3_profile _sqlite3_profile;

  int sqlite3_trace_v2(
    ffi.Pointer<sqlite3> arg0,
    int uMask,
    ffi.Pointer<ffi.NativeFunction<_typedefC_36>> xCallback,
    ffi.Pointer<ffi.Void> pCtx,
  ) {
    _sqlite3_trace_v2 ??=
        _dylib.lookupFunction<_c_sqlite3_trace_v2, _dart_sqlite3_trace_v2>(
            'sqlite3_trace_v2');
    return _sqlite3_trace_v2(
      arg0,
      uMask,
      xCallback,
      pCtx,
    );
  }

  _dart_sqlite3_trace_v2 _sqlite3_trace_v2;

  void sqlite3_progress_handler(
    ffi.Pointer<sqlite3> arg0,
    int arg1,
    ffi.Pointer<ffi.NativeFunction<_typedefC_37>> arg2,
    ffi.Pointer<ffi.Void> arg3,
  ) {
    _sqlite3_progress_handler ??= _dylib.lookupFunction<
        _c_sqlite3_progress_handler,
        _dart_sqlite3_progress_handler>('sqlite3_progress_handler');
    return _sqlite3_progress_handler(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_progress_handler _sqlite3_progress_handler;

  int sqlite3_open(
    ffi.Pointer<ffi.Int8> filename,
    ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
  ) {
    _sqlite3_open ??= _dylib
        .lookupFunction<_c_sqlite3_open, _dart_sqlite3_open>('sqlite3_open');
    return _sqlite3_open(
      filename,
      ppDb,
    );
  }

  _dart_sqlite3_open _sqlite3_open;

  int sqlite3_open16(
    ffi.Pointer<ffi.Void> filename,
    ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
  ) {
    _sqlite3_open16 ??=
        _dylib.lookupFunction<_c_sqlite3_open16, _dart_sqlite3_open16>(
            'sqlite3_open16');
    return _sqlite3_open16(
      filename,
      ppDb,
    );
  }

  _dart_sqlite3_open16 _sqlite3_open16;

  int sqlite3_open_v2(
    ffi.Pointer<ffi.Int8> filename,
    ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
    int flags,
    ffi.Pointer<ffi.Int8> zVfs,
  ) {
    _sqlite3_open_v2 ??=
        _dylib.lookupFunction<_c_sqlite3_open_v2, _dart_sqlite3_open_v2>(
            'sqlite3_open_v2');
    return _sqlite3_open_v2(
      filename,
      ppDb,
      flags,
      zVfs,
    );
  }

  _dart_sqlite3_open_v2 _sqlite3_open_v2;

  ffi.Pointer<ffi.Int8> sqlite3_uri_parameter(
    ffi.Pointer<ffi.Int8> zFilename,
    ffi.Pointer<ffi.Int8> zParam,
  ) {
    _sqlite3_uri_parameter ??= _dylib.lookupFunction<_c_sqlite3_uri_parameter,
        _dart_sqlite3_uri_parameter>('sqlite3_uri_parameter');
    return _sqlite3_uri_parameter(
      zFilename,
      zParam,
    );
  }

  _dart_sqlite3_uri_parameter _sqlite3_uri_parameter;

  int sqlite3_uri_boolean(
    ffi.Pointer<ffi.Int8> zFile,
    ffi.Pointer<ffi.Int8> zParam,
    int bDefault,
  ) {
    _sqlite3_uri_boolean ??= _dylib.lookupFunction<_c_sqlite3_uri_boolean,
        _dart_sqlite3_uri_boolean>('sqlite3_uri_boolean');
    return _sqlite3_uri_boolean(
      zFile,
      zParam,
      bDefault,
    );
  }

  _dart_sqlite3_uri_boolean _sqlite3_uri_boolean;

  int sqlite3_uri_int64(
    ffi.Pointer<ffi.Int8> arg0,
    ffi.Pointer<ffi.Int8> arg1,
    int arg2,
  ) {
    _sqlite3_uri_int64 ??=
        _dylib.lookupFunction<_c_sqlite3_uri_int64, _dart_sqlite3_uri_int64>(
            'sqlite3_uri_int64');
    return _sqlite3_uri_int64(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_uri_int64 _sqlite3_uri_int64;

  ffi.Pointer<ffi.Int8> sqlite3_uri_key(
    ffi.Pointer<ffi.Int8> zFilename,
    int N,
  ) {
    _sqlite3_uri_key ??=
        _dylib.lookupFunction<_c_sqlite3_uri_key, _dart_sqlite3_uri_key>(
            'sqlite3_uri_key');
    return _sqlite3_uri_key(
      zFilename,
      N,
    );
  }

  _dart_sqlite3_uri_key _sqlite3_uri_key;

  ffi.Pointer<ffi.Int8> sqlite3_filename_database(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_filename_database ??= _dylib.lookupFunction<
        _c_sqlite3_filename_database,
        _dart_sqlite3_filename_database>('sqlite3_filename_database');
    return _sqlite3_filename_database(
      arg0,
    );
  }

  _dart_sqlite3_filename_database _sqlite3_filename_database;

  ffi.Pointer<ffi.Int8> sqlite3_filename_journal(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_filename_journal ??= _dylib.lookupFunction<
        _c_sqlite3_filename_journal,
        _dart_sqlite3_filename_journal>('sqlite3_filename_journal');
    return _sqlite3_filename_journal(
      arg0,
    );
  }

  _dart_sqlite3_filename_journal _sqlite3_filename_journal;

  ffi.Pointer<ffi.Int8> sqlite3_filename_wal(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_filename_wal ??= _dylib.lookupFunction<_c_sqlite3_filename_wal,
        _dart_sqlite3_filename_wal>('sqlite3_filename_wal');
    return _sqlite3_filename_wal(
      arg0,
    );
  }

  _dart_sqlite3_filename_wal _sqlite3_filename_wal;

  ffi.Pointer<sqlite3_file> sqlite3_database_file_object(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_database_file_object ??= _dylib.lookupFunction<
        _c_sqlite3_database_file_object,
        _dart_sqlite3_database_file_object>('sqlite3_database_file_object');
    return _sqlite3_database_file_object(
      arg0,
    );
  }

  _dart_sqlite3_database_file_object _sqlite3_database_file_object;

  ffi.Pointer<ffi.Int8> sqlite3_create_filename(
    ffi.Pointer<ffi.Int8> zDatabase,
    ffi.Pointer<ffi.Int8> zJournal,
    ffi.Pointer<ffi.Int8> zWal,
    int nParam,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> azParam,
  ) {
    _sqlite3_create_filename ??= _dylib.lookupFunction<
        _c_sqlite3_create_filename,
        _dart_sqlite3_create_filename>('sqlite3_create_filename');
    return _sqlite3_create_filename(
      zDatabase,
      zJournal,
      zWal,
      nParam,
      azParam,
    );
  }

  _dart_sqlite3_create_filename _sqlite3_create_filename;

  void sqlite3_free_filename(
    ffi.Pointer<ffi.Int8> arg0,
  ) {
    _sqlite3_free_filename ??= _dylib.lookupFunction<_c_sqlite3_free_filename,
        _dart_sqlite3_free_filename>('sqlite3_free_filename');
    return _sqlite3_free_filename(
      arg0,
    );
  }

  _dart_sqlite3_free_filename _sqlite3_free_filename;

  int sqlite3_errcode(
    ffi.Pointer<sqlite3> db,
  ) {
    _sqlite3_errcode ??=
        _dylib.lookupFunction<_c_sqlite3_errcode, _dart_sqlite3_errcode>(
            'sqlite3_errcode');
    return _sqlite3_errcode(
      db,
    );
  }

  _dart_sqlite3_errcode _sqlite3_errcode;

  int sqlite3_extended_errcode(
    ffi.Pointer<sqlite3> db,
  ) {
    _sqlite3_extended_errcode ??= _dylib.lookupFunction<
        _c_sqlite3_extended_errcode,
        _dart_sqlite3_extended_errcode>('sqlite3_extended_errcode');
    return _sqlite3_extended_errcode(
      db,
    );
  }

  _dart_sqlite3_extended_errcode _sqlite3_extended_errcode;

  ffi.Pointer<ffi.Int8> sqlite3_errmsg(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_errmsg ??=
        _dylib.lookupFunction<_c_sqlite3_errmsg, _dart_sqlite3_errmsg>(
            'sqlite3_errmsg');
    return _sqlite3_errmsg(
      arg0,
    );
  }

  _dart_sqlite3_errmsg _sqlite3_errmsg;

  ffi.Pointer<ffi.Void> sqlite3_errmsg16(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_errmsg16 ??=
        _dylib.lookupFunction<_c_sqlite3_errmsg16, _dart_sqlite3_errmsg16>(
            'sqlite3_errmsg16');
    return _sqlite3_errmsg16(
      arg0,
    );
  }

  _dart_sqlite3_errmsg16 _sqlite3_errmsg16;

  ffi.Pointer<ffi.Int8> sqlite3_errstr(
    int arg0,
  ) {
    _sqlite3_errstr ??=
        _dylib.lookupFunction<_c_sqlite3_errstr, _dart_sqlite3_errstr>(
            'sqlite3_errstr');
    return _sqlite3_errstr(
      arg0,
    );
  }

  _dart_sqlite3_errstr _sqlite3_errstr;

  int sqlite3_limit(
    ffi.Pointer<sqlite3> arg0,
    int id,
    int newVal,
  ) {
    _sqlite3_limit ??= _dylib
        .lookupFunction<_c_sqlite3_limit, _dart_sqlite3_limit>('sqlite3_limit');
    return _sqlite3_limit(
      arg0,
      id,
      newVal,
    );
  }

  _dart_sqlite3_limit _sqlite3_limit;

  int sqlite3_prepare(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSql,
    int nByte,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
  ) {
    _sqlite3_prepare ??=
        _dylib.lookupFunction<_c_sqlite3_prepare, _dart_sqlite3_prepare>(
            'sqlite3_prepare');
    return _sqlite3_prepare(
      db,
      zSql,
      nByte,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare _sqlite3_prepare;

  int sqlite3_prepare_v2(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSql,
    int nByte,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
  ) {
    _sqlite3_prepare_v2 ??=
        _dylib.lookupFunction<_c_sqlite3_prepare_v2, _dart_sqlite3_prepare_v2>(
            'sqlite3_prepare_v2');
    return _sqlite3_prepare_v2(
      db,
      zSql,
      nByte,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare_v2 _sqlite3_prepare_v2;

  int sqlite3_prepare_v3(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSql,
    int nByte,
    int prepFlags,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
  ) {
    _sqlite3_prepare_v3 ??=
        _dylib.lookupFunction<_c_sqlite3_prepare_v3, _dart_sqlite3_prepare_v3>(
            'sqlite3_prepare_v3');
    return _sqlite3_prepare_v3(
      db,
      zSql,
      nByte,
      prepFlags,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare_v3 _sqlite3_prepare_v3;

  int sqlite3_prepare16(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Void> zSql,
    int nByte,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
  ) {
    _sqlite3_prepare16 ??=
        _dylib.lookupFunction<_c_sqlite3_prepare16, _dart_sqlite3_prepare16>(
            'sqlite3_prepare16');
    return _sqlite3_prepare16(
      db,
      zSql,
      nByte,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare16 _sqlite3_prepare16;

  int sqlite3_prepare16_v2(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Void> zSql,
    int nByte,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
  ) {
    _sqlite3_prepare16_v2 ??= _dylib.lookupFunction<_c_sqlite3_prepare16_v2,
        _dart_sqlite3_prepare16_v2>('sqlite3_prepare16_v2');
    return _sqlite3_prepare16_v2(
      db,
      zSql,
      nByte,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare16_v2 _sqlite3_prepare16_v2;

  int sqlite3_prepare16_v3(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Void> zSql,
    int nByte,
    int prepFlags,
    ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
    ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
  ) {
    _sqlite3_prepare16_v3 ??= _dylib.lookupFunction<_c_sqlite3_prepare16_v3,
        _dart_sqlite3_prepare16_v3>('sqlite3_prepare16_v3');
    return _sqlite3_prepare16_v3(
      db,
      zSql,
      nByte,
      prepFlags,
      ppStmt,
      pzTail,
    );
  }

  _dart_sqlite3_prepare16_v3 _sqlite3_prepare16_v3;

  ffi.Pointer<ffi.Int8> sqlite3_sql(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_sql ??=
        _dylib.lookupFunction<_c_sqlite3_sql, _dart_sqlite3_sql>('sqlite3_sql');
    return _sqlite3_sql(
      pStmt,
    );
  }

  _dart_sqlite3_sql _sqlite3_sql;

  ffi.Pointer<ffi.Int8> sqlite3_expanded_sql(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_expanded_sql ??= _dylib.lookupFunction<_c_sqlite3_expanded_sql,
        _dart_sqlite3_expanded_sql>('sqlite3_expanded_sql');
    return _sqlite3_expanded_sql(
      pStmt,
    );
  }

  _dart_sqlite3_expanded_sql _sqlite3_expanded_sql;

  ffi.Pointer<ffi.Int8> sqlite3_normalized_sql(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_normalized_sql ??= _dylib.lookupFunction<_c_sqlite3_normalized_sql,
        _dart_sqlite3_normalized_sql>('sqlite3_normalized_sql');
    return _sqlite3_normalized_sql(
      pStmt,
    );
  }

  _dart_sqlite3_normalized_sql _sqlite3_normalized_sql;

  int sqlite3_stmt_readonly(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_stmt_readonly ??= _dylib.lookupFunction<_c_sqlite3_stmt_readonly,
        _dart_sqlite3_stmt_readonly>('sqlite3_stmt_readonly');
    return _sqlite3_stmt_readonly(
      pStmt,
    );
  }

  _dart_sqlite3_stmt_readonly _sqlite3_stmt_readonly;

  int sqlite3_stmt_isexplain(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_stmt_isexplain ??= _dylib.lookupFunction<_c_sqlite3_stmt_isexplain,
        _dart_sqlite3_stmt_isexplain>('sqlite3_stmt_isexplain');
    return _sqlite3_stmt_isexplain(
      pStmt,
    );
  }

  _dart_sqlite3_stmt_isexplain _sqlite3_stmt_isexplain;

  int sqlite3_stmt_busy(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_stmt_busy ??=
        _dylib.lookupFunction<_c_sqlite3_stmt_busy, _dart_sqlite3_stmt_busy>(
            'sqlite3_stmt_busy');
    return _sqlite3_stmt_busy(
      arg0,
    );
  }

  _dart_sqlite3_stmt_busy _sqlite3_stmt_busy;

  int sqlite3_bind_blob(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Void> arg2,
    int n,
    ffi.Pointer<ffi.NativeFunction<_typedefC_38>> arg4,
  ) {
    _sqlite3_bind_blob ??=
        _dylib.lookupFunction<_c_sqlite3_bind_blob, _dart_sqlite3_bind_blob>(
            'sqlite3_bind_blob');
    return _sqlite3_bind_blob(
      arg0,
      arg1,
      arg2,
      n,
      arg4,
    );
  }

  _dart_sqlite3_bind_blob _sqlite3_bind_blob;

  int sqlite3_bind_blob64(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Void> arg2,
    int arg3,
    ffi.Pointer<ffi.NativeFunction<_typedefC_39>> arg4,
  ) {
    _sqlite3_bind_blob64 ??= _dylib.lookupFunction<_c_sqlite3_bind_blob64,
        _dart_sqlite3_bind_blob64>('sqlite3_bind_blob64');
    return _sqlite3_bind_blob64(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
    );
  }

  _dart_sqlite3_bind_blob64 _sqlite3_bind_blob64;

  int sqlite3_bind_double(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    double arg2,
  ) {
    _sqlite3_bind_double ??= _dylib.lookupFunction<_c_sqlite3_bind_double,
        _dart_sqlite3_bind_double>('sqlite3_bind_double');
    return _sqlite3_bind_double(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_bind_double _sqlite3_bind_double;

  int sqlite3_bind_int(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    int arg2,
  ) {
    _sqlite3_bind_int ??=
        _dylib.lookupFunction<_c_sqlite3_bind_int, _dart_sqlite3_bind_int>(
            'sqlite3_bind_int');
    return _sqlite3_bind_int(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_bind_int _sqlite3_bind_int;

  int sqlite3_bind_int64(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    int arg2,
  ) {
    _sqlite3_bind_int64 ??=
        _dylib.lookupFunction<_c_sqlite3_bind_int64, _dart_sqlite3_bind_int64>(
            'sqlite3_bind_int64');
    return _sqlite3_bind_int64(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_bind_int64 _sqlite3_bind_int64;

  int sqlite3_bind_null(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_bind_null ??=
        _dylib.lookupFunction<_c_sqlite3_bind_null, _dart_sqlite3_bind_null>(
            'sqlite3_bind_null');
    return _sqlite3_bind_null(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_bind_null _sqlite3_bind_null;

  int sqlite3_bind_text(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Int8> arg2,
    int arg3,
    ffi.Pointer<ffi.NativeFunction<_typedefC_40>> arg4,
  ) {
    _sqlite3_bind_text ??=
        _dylib.lookupFunction<_c_sqlite3_bind_text, _dart_sqlite3_bind_text>(
            'sqlite3_bind_text');
    return _sqlite3_bind_text(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
    );
  }

  _dart_sqlite3_bind_text _sqlite3_bind_text;

  int sqlite3_bind_text16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Void> arg2,
    int arg3,
    ffi.Pointer<ffi.NativeFunction<_typedefC_41>> arg4,
  ) {
    _sqlite3_bind_text16 ??= _dylib.lookupFunction<_c_sqlite3_bind_text16,
        _dart_sqlite3_bind_text16>('sqlite3_bind_text16');
    return _sqlite3_bind_text16(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
    );
  }

  _dart_sqlite3_bind_text16 _sqlite3_bind_text16;

  int sqlite3_bind_text64(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Int8> arg2,
    int arg3,
    ffi.Pointer<ffi.NativeFunction<_typedefC_42>> arg4,
    int encoding,
  ) {
    _sqlite3_bind_text64 ??= _dylib.lookupFunction<_c_sqlite3_bind_text64,
        _dart_sqlite3_bind_text64>('sqlite3_bind_text64');
    return _sqlite3_bind_text64(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
      encoding,
    );
  }

  _dart_sqlite3_bind_text64 _sqlite3_bind_text64;

  int sqlite3_bind_value(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<sqlite3_value> arg2,
  ) {
    _sqlite3_bind_value ??=
        _dylib.lookupFunction<_c_sqlite3_bind_value, _dart_sqlite3_bind_value>(
            'sqlite3_bind_value');
    return _sqlite3_bind_value(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_bind_value _sqlite3_bind_value;

  int sqlite3_bind_pointer(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    ffi.Pointer<ffi.Void> arg2,
    ffi.Pointer<ffi.Int8> arg3,
    ffi.Pointer<ffi.NativeFunction<_typedefC_43>> arg4,
  ) {
    _sqlite3_bind_pointer ??= _dylib.lookupFunction<_c_sqlite3_bind_pointer,
        _dart_sqlite3_bind_pointer>('sqlite3_bind_pointer');
    return _sqlite3_bind_pointer(
      arg0,
      arg1,
      arg2,
      arg3,
      arg4,
    );
  }

  _dart_sqlite3_bind_pointer _sqlite3_bind_pointer;

  int sqlite3_bind_zeroblob(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    int n,
  ) {
    _sqlite3_bind_zeroblob ??= _dylib.lookupFunction<_c_sqlite3_bind_zeroblob,
        _dart_sqlite3_bind_zeroblob>('sqlite3_bind_zeroblob');
    return _sqlite3_bind_zeroblob(
      arg0,
      arg1,
      n,
    );
  }

  _dart_sqlite3_bind_zeroblob _sqlite3_bind_zeroblob;

  int sqlite3_bind_zeroblob64(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
    int arg2,
  ) {
    _sqlite3_bind_zeroblob64 ??= _dylib.lookupFunction<
        _c_sqlite3_bind_zeroblob64,
        _dart_sqlite3_bind_zeroblob64>('sqlite3_bind_zeroblob64');
    return _sqlite3_bind_zeroblob64(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_bind_zeroblob64 _sqlite3_bind_zeroblob64;

  int sqlite3_bind_parameter_count(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_bind_parameter_count ??= _dylib.lookupFunction<
        _c_sqlite3_bind_parameter_count,
        _dart_sqlite3_bind_parameter_count>('sqlite3_bind_parameter_count');
    return _sqlite3_bind_parameter_count(
      arg0,
    );
  }

  _dart_sqlite3_bind_parameter_count _sqlite3_bind_parameter_count;

  ffi.Pointer<ffi.Int8> sqlite3_bind_parameter_name(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_bind_parameter_name ??= _dylib.lookupFunction<
        _c_sqlite3_bind_parameter_name,
        _dart_sqlite3_bind_parameter_name>('sqlite3_bind_parameter_name');
    return _sqlite3_bind_parameter_name(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_bind_parameter_name _sqlite3_bind_parameter_name;

  int sqlite3_bind_parameter_index(
    ffi.Pointer<sqlite3_stmt> arg0,
    ffi.Pointer<ffi.Int8> zName,
  ) {
    _sqlite3_bind_parameter_index ??= _dylib.lookupFunction<
        _c_sqlite3_bind_parameter_index,
        _dart_sqlite3_bind_parameter_index>('sqlite3_bind_parameter_index');
    return _sqlite3_bind_parameter_index(
      arg0,
      zName,
    );
  }

  _dart_sqlite3_bind_parameter_index _sqlite3_bind_parameter_index;

  int sqlite3_clear_bindings(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_clear_bindings ??= _dylib.lookupFunction<_c_sqlite3_clear_bindings,
        _dart_sqlite3_clear_bindings>('sqlite3_clear_bindings');
    return _sqlite3_clear_bindings(
      arg0,
    );
  }

  _dart_sqlite3_clear_bindings _sqlite3_clear_bindings;

  int sqlite3_column_count(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_column_count ??= _dylib.lookupFunction<_c_sqlite3_column_count,
        _dart_sqlite3_column_count>('sqlite3_column_count');
    return _sqlite3_column_count(
      pStmt,
    );
  }

  _dart_sqlite3_column_count _sqlite3_column_count;

  ffi.Pointer<ffi.Int8> sqlite3_column_name(
    ffi.Pointer<sqlite3_stmt> arg0,
    int N,
  ) {
    _sqlite3_column_name ??= _dylib.lookupFunction<_c_sqlite3_column_name,
        _dart_sqlite3_column_name>('sqlite3_column_name');
    return _sqlite3_column_name(
      arg0,
      N,
    );
  }

  _dart_sqlite3_column_name _sqlite3_column_name;

  ffi.Pointer<ffi.Void> sqlite3_column_name16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int N,
  ) {
    _sqlite3_column_name16 ??= _dylib.lookupFunction<_c_sqlite3_column_name16,
        _dart_sqlite3_column_name16>('sqlite3_column_name16');
    return _sqlite3_column_name16(
      arg0,
      N,
    );
  }

  _dart_sqlite3_column_name16 _sqlite3_column_name16;

  ffi.Pointer<ffi.Int8> sqlite3_column_database_name(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_database_name ??= _dylib.lookupFunction<
        _c_sqlite3_column_database_name,
        _dart_sqlite3_column_database_name>('sqlite3_column_database_name');
    return _sqlite3_column_database_name(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_database_name _sqlite3_column_database_name;

  ffi.Pointer<ffi.Void> sqlite3_column_database_name16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_database_name16 ??= _dylib.lookupFunction<
        _c_sqlite3_column_database_name16,
        _dart_sqlite3_column_database_name16>('sqlite3_column_database_name16');
    return _sqlite3_column_database_name16(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_database_name16 _sqlite3_column_database_name16;

  ffi.Pointer<ffi.Int8> sqlite3_column_table_name(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_table_name ??= _dylib.lookupFunction<
        _c_sqlite3_column_table_name,
        _dart_sqlite3_column_table_name>('sqlite3_column_table_name');
    return _sqlite3_column_table_name(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_table_name _sqlite3_column_table_name;

  ffi.Pointer<ffi.Void> sqlite3_column_table_name16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_table_name16 ??= _dylib.lookupFunction<
        _c_sqlite3_column_table_name16,
        _dart_sqlite3_column_table_name16>('sqlite3_column_table_name16');
    return _sqlite3_column_table_name16(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_table_name16 _sqlite3_column_table_name16;

  ffi.Pointer<ffi.Int8> sqlite3_column_origin_name(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_origin_name ??= _dylib.lookupFunction<
        _c_sqlite3_column_origin_name,
        _dart_sqlite3_column_origin_name>('sqlite3_column_origin_name');
    return _sqlite3_column_origin_name(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_origin_name _sqlite3_column_origin_name;

  ffi.Pointer<ffi.Void> sqlite3_column_origin_name16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_origin_name16 ??= _dylib.lookupFunction<
        _c_sqlite3_column_origin_name16,
        _dart_sqlite3_column_origin_name16>('sqlite3_column_origin_name16');
    return _sqlite3_column_origin_name16(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_origin_name16 _sqlite3_column_origin_name16;

  ffi.Pointer<ffi.Int8> sqlite3_column_decltype(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_decltype ??= _dylib.lookupFunction<
        _c_sqlite3_column_decltype,
        _dart_sqlite3_column_decltype>('sqlite3_column_decltype');
    return _sqlite3_column_decltype(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_decltype _sqlite3_column_decltype;

  ffi.Pointer<ffi.Void> sqlite3_column_decltype16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int arg1,
  ) {
    _sqlite3_column_decltype16 ??= _dylib.lookupFunction<
        _c_sqlite3_column_decltype16,
        _dart_sqlite3_column_decltype16>('sqlite3_column_decltype16');
    return _sqlite3_column_decltype16(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_column_decltype16 _sqlite3_column_decltype16;

  int sqlite3_step(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_step ??= _dylib
        .lookupFunction<_c_sqlite3_step, _dart_sqlite3_step>('sqlite3_step');
    return _sqlite3_step(
      arg0,
    );
  }

  _dart_sqlite3_step _sqlite3_step;

  int sqlite3_data_count(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_data_count ??=
        _dylib.lookupFunction<_c_sqlite3_data_count, _dart_sqlite3_data_count>(
            'sqlite3_data_count');
    return _sqlite3_data_count(
      pStmt,
    );
  }

  _dart_sqlite3_data_count _sqlite3_data_count;

  ffi.Pointer<ffi.Void> sqlite3_column_blob(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_blob ??= _dylib.lookupFunction<_c_sqlite3_column_blob,
        _dart_sqlite3_column_blob>('sqlite3_column_blob');
    return _sqlite3_column_blob(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_blob _sqlite3_column_blob;

  double sqlite3_column_double(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_double ??= _dylib.lookupFunction<_c_sqlite3_column_double,
        _dart_sqlite3_column_double>('sqlite3_column_double');
    return _sqlite3_column_double(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_double _sqlite3_column_double;

  int sqlite3_column_int(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_int ??=
        _dylib.lookupFunction<_c_sqlite3_column_int, _dart_sqlite3_column_int>(
            'sqlite3_column_int');
    return _sqlite3_column_int(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_int _sqlite3_column_int;

  int sqlite3_column_int64(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_int64 ??= _dylib.lookupFunction<_c_sqlite3_column_int64,
        _dart_sqlite3_column_int64>('sqlite3_column_int64');
    return _sqlite3_column_int64(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_int64 _sqlite3_column_int64;

  ffi.Pointer<ffi.Uint8> sqlite3_column_text(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_text ??= _dylib.lookupFunction<_c_sqlite3_column_text,
        _dart_sqlite3_column_text>('sqlite3_column_text');
    return _sqlite3_column_text(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_text _sqlite3_column_text;

  ffi.Pointer<ffi.Void> sqlite3_column_text16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_text16 ??= _dylib.lookupFunction<_c_sqlite3_column_text16,
        _dart_sqlite3_column_text16>('sqlite3_column_text16');
    return _sqlite3_column_text16(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_text16 _sqlite3_column_text16;

  ffi.Pointer<sqlite3_value> sqlite3_column_value(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_value ??= _dylib.lookupFunction<_c_sqlite3_column_value,
        _dart_sqlite3_column_value>('sqlite3_column_value');
    return _sqlite3_column_value(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_value _sqlite3_column_value;

  int sqlite3_column_bytes(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_bytes ??= _dylib.lookupFunction<_c_sqlite3_column_bytes,
        _dart_sqlite3_column_bytes>('sqlite3_column_bytes');
    return _sqlite3_column_bytes(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_bytes _sqlite3_column_bytes;

  int sqlite3_column_bytes16(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_bytes16 ??= _dylib.lookupFunction<_c_sqlite3_column_bytes16,
        _dart_sqlite3_column_bytes16>('sqlite3_column_bytes16');
    return _sqlite3_column_bytes16(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_bytes16 _sqlite3_column_bytes16;

  int sqlite3_column_type(
    ffi.Pointer<sqlite3_stmt> arg0,
    int iCol,
  ) {
    _sqlite3_column_type ??= _dylib.lookupFunction<_c_sqlite3_column_type,
        _dart_sqlite3_column_type>('sqlite3_column_type');
    return _sqlite3_column_type(
      arg0,
      iCol,
    );
  }

  _dart_sqlite3_column_type _sqlite3_column_type;

  int sqlite3_finalize(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_finalize ??=
        _dylib.lookupFunction<_c_sqlite3_finalize, _dart_sqlite3_finalize>(
            'sqlite3_finalize');
    return _sqlite3_finalize(
      pStmt,
    );
  }

  _dart_sqlite3_finalize _sqlite3_finalize;

  int sqlite3_reset(
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_reset ??= _dylib
        .lookupFunction<_c_sqlite3_reset, _dart_sqlite3_reset>('sqlite3_reset');
    return _sqlite3_reset(
      pStmt,
    );
  }

  _dart_sqlite3_reset _sqlite3_reset;

  int sqlite3_create_function(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zFunctionName,
    int nArg,
    int eTextRep,
    ffi.Pointer<ffi.Void> pApp,
    ffi.Pointer<ffi.NativeFunction<_typedefC_44>> xFunc,
    ffi.Pointer<ffi.NativeFunction<_typedefC_45>> xStep,
    ffi.Pointer<ffi.NativeFunction<_typedefC_46>> xFinal,
  ) {
    _sqlite3_create_function ??= _dylib.lookupFunction<
        _c_sqlite3_create_function,
        _dart_sqlite3_create_function>('sqlite3_create_function');
    return _sqlite3_create_function(
      db,
      zFunctionName,
      nArg,
      eTextRep,
      pApp,
      xFunc,
      xStep,
      xFinal,
    );
  }

  _dart_sqlite3_create_function _sqlite3_create_function;

  int sqlite3_create_function16(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Void> zFunctionName,
    int nArg,
    int eTextRep,
    ffi.Pointer<ffi.Void> pApp,
    ffi.Pointer<ffi.NativeFunction<_typedefC_47>> xFunc,
    ffi.Pointer<ffi.NativeFunction<_typedefC_48>> xStep,
    ffi.Pointer<ffi.NativeFunction<_typedefC_49>> xFinal,
  ) {
    _sqlite3_create_function16 ??= _dylib.lookupFunction<
        _c_sqlite3_create_function16,
        _dart_sqlite3_create_function16>('sqlite3_create_function16');
    return _sqlite3_create_function16(
      db,
      zFunctionName,
      nArg,
      eTextRep,
      pApp,
      xFunc,
      xStep,
      xFinal,
    );
  }

  _dart_sqlite3_create_function16 _sqlite3_create_function16;

  int sqlite3_create_function_v2(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zFunctionName,
    int nArg,
    int eTextRep,
    ffi.Pointer<ffi.Void> pApp,
    ffi.Pointer<ffi.NativeFunction<_typedefC_50>> xFunc,
    ffi.Pointer<ffi.NativeFunction<_typedefC_51>> xStep,
    ffi.Pointer<ffi.NativeFunction<_typedefC_52>> xFinal,
    ffi.Pointer<ffi.NativeFunction<_typedefC_53>> xDestroy,
  ) {
    _sqlite3_create_function_v2 ??= _dylib.lookupFunction<
        _c_sqlite3_create_function_v2,
        _dart_sqlite3_create_function_v2>('sqlite3_create_function_v2');
    return _sqlite3_create_function_v2(
      db,
      zFunctionName,
      nArg,
      eTextRep,
      pApp,
      xFunc,
      xStep,
      xFinal,
      xDestroy,
    );
  }

  _dart_sqlite3_create_function_v2 _sqlite3_create_function_v2;

  int sqlite3_create_window_function(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zFunctionName,
    int nArg,
    int eTextRep,
    ffi.Pointer<ffi.Void> pApp,
    ffi.Pointer<ffi.NativeFunction<_typedefC_54>> xStep,
    ffi.Pointer<ffi.NativeFunction<_typedefC_55>> xFinal,
    ffi.Pointer<ffi.NativeFunction<_typedefC_56>> xValue,
    ffi.Pointer<ffi.NativeFunction<_typedefC_57>> xInverse,
    ffi.Pointer<ffi.NativeFunction<_typedefC_58>> xDestroy,
  ) {
    _sqlite3_create_window_function ??= _dylib.lookupFunction<
        _c_sqlite3_create_window_function,
        _dart_sqlite3_create_window_function>('sqlite3_create_window_function');
    return _sqlite3_create_window_function(
      db,
      zFunctionName,
      nArg,
      eTextRep,
      pApp,
      xStep,
      xFinal,
      xValue,
      xInverse,
      xDestroy,
    );
  }

  _dart_sqlite3_create_window_function _sqlite3_create_window_function;

  int sqlite3_aggregate_count(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_aggregate_count ??= _dylib.lookupFunction<
        _c_sqlite3_aggregate_count,
        _dart_sqlite3_aggregate_count>('sqlite3_aggregate_count');
    return _sqlite3_aggregate_count(
      arg0,
    );
  }

  _dart_sqlite3_aggregate_count _sqlite3_aggregate_count;

  int sqlite3_expired(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_expired ??=
        _dylib.lookupFunction<_c_sqlite3_expired, _dart_sqlite3_expired>(
            'sqlite3_expired');
    return _sqlite3_expired(
      arg0,
    );
  }

  _dart_sqlite3_expired _sqlite3_expired;

  int sqlite3_transfer_bindings(
    ffi.Pointer<sqlite3_stmt> arg0,
    ffi.Pointer<sqlite3_stmt> arg1,
  ) {
    _sqlite3_transfer_bindings ??= _dylib.lookupFunction<
        _c_sqlite3_transfer_bindings,
        _dart_sqlite3_transfer_bindings>('sqlite3_transfer_bindings');
    return _sqlite3_transfer_bindings(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_transfer_bindings _sqlite3_transfer_bindings;

  int sqlite3_global_recover() {
    _sqlite3_global_recover ??= _dylib.lookupFunction<_c_sqlite3_global_recover,
        _dart_sqlite3_global_recover>('sqlite3_global_recover');
    return _sqlite3_global_recover();
  }

  _dart_sqlite3_global_recover _sqlite3_global_recover;

  void sqlite3_thread_cleanup() {
    _sqlite3_thread_cleanup ??= _dylib.lookupFunction<_c_sqlite3_thread_cleanup,
        _dart_sqlite3_thread_cleanup>('sqlite3_thread_cleanup');
    return _sqlite3_thread_cleanup();
  }

  _dart_sqlite3_thread_cleanup _sqlite3_thread_cleanup;

  int sqlite3_memory_alarm(
    ffi.Pointer<ffi.NativeFunction<_typedefC_59>> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
  ) {
    _sqlite3_memory_alarm ??= _dylib.lookupFunction<_c_sqlite3_memory_alarm,
        _dart_sqlite3_memory_alarm>('sqlite3_memory_alarm');
    return _sqlite3_memory_alarm(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_memory_alarm _sqlite3_memory_alarm;

  ffi.Pointer<ffi.Void> sqlite3_value_blob(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_blob ??=
        _dylib.lookupFunction<_c_sqlite3_value_blob, _dart_sqlite3_value_blob>(
            'sqlite3_value_blob');
    return _sqlite3_value_blob(
      arg0,
    );
  }

  _dart_sqlite3_value_blob _sqlite3_value_blob;

  double sqlite3_value_double(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_double ??= _dylib.lookupFunction<_c_sqlite3_value_double,
        _dart_sqlite3_value_double>('sqlite3_value_double');
    return _sqlite3_value_double(
      arg0,
    );
  }

  _dart_sqlite3_value_double _sqlite3_value_double;

  int sqlite3_value_int(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_int ??=
        _dylib.lookupFunction<_c_sqlite3_value_int, _dart_sqlite3_value_int>(
            'sqlite3_value_int');
    return _sqlite3_value_int(
      arg0,
    );
  }

  _dart_sqlite3_value_int _sqlite3_value_int;

  int sqlite3_value_int64(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_int64 ??= _dylib.lookupFunction<_c_sqlite3_value_int64,
        _dart_sqlite3_value_int64>('sqlite3_value_int64');
    return _sqlite3_value_int64(
      arg0,
    );
  }

  _dart_sqlite3_value_int64 _sqlite3_value_int64;

  ffi.Pointer<ffi.Void> sqlite3_value_pointer(
    ffi.Pointer<sqlite3_value> arg0,
    ffi.Pointer<ffi.Int8> arg1,
  ) {
    _sqlite3_value_pointer ??= _dylib.lookupFunction<_c_sqlite3_value_pointer,
        _dart_sqlite3_value_pointer>('sqlite3_value_pointer');
    return _sqlite3_value_pointer(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_value_pointer _sqlite3_value_pointer;

  ffi.Pointer<ffi.Uint8> sqlite3_value_text(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_text ??=
        _dylib.lookupFunction<_c_sqlite3_value_text, _dart_sqlite3_value_text>(
            'sqlite3_value_text');
    return _sqlite3_value_text(
      arg0,
    );
  }

  _dart_sqlite3_value_text _sqlite3_value_text;

  ffi.Pointer<ffi.Void> sqlite3_value_text16(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_text16 ??= _dylib.lookupFunction<_c_sqlite3_value_text16,
        _dart_sqlite3_value_text16>('sqlite3_value_text16');
    return _sqlite3_value_text16(
      arg0,
    );
  }

  _dart_sqlite3_value_text16 _sqlite3_value_text16;

  ffi.Pointer<ffi.Void> sqlite3_value_text16le(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_text16le ??= _dylib.lookupFunction<_c_sqlite3_value_text16le,
        _dart_sqlite3_value_text16le>('sqlite3_value_text16le');
    return _sqlite3_value_text16le(
      arg0,
    );
  }

  _dart_sqlite3_value_text16le _sqlite3_value_text16le;

  ffi.Pointer<ffi.Void> sqlite3_value_text16be(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_text16be ??= _dylib.lookupFunction<_c_sqlite3_value_text16be,
        _dart_sqlite3_value_text16be>('sqlite3_value_text16be');
    return _sqlite3_value_text16be(
      arg0,
    );
  }

  _dart_sqlite3_value_text16be _sqlite3_value_text16be;

  int sqlite3_value_bytes(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_bytes ??= _dylib.lookupFunction<_c_sqlite3_value_bytes,
        _dart_sqlite3_value_bytes>('sqlite3_value_bytes');
    return _sqlite3_value_bytes(
      arg0,
    );
  }

  _dart_sqlite3_value_bytes _sqlite3_value_bytes;

  int sqlite3_value_bytes16(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_bytes16 ??= _dylib.lookupFunction<_c_sqlite3_value_bytes16,
        _dart_sqlite3_value_bytes16>('sqlite3_value_bytes16');
    return _sqlite3_value_bytes16(
      arg0,
    );
  }

  _dart_sqlite3_value_bytes16 _sqlite3_value_bytes16;

  int sqlite3_value_type(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_type ??=
        _dylib.lookupFunction<_c_sqlite3_value_type, _dart_sqlite3_value_type>(
            'sqlite3_value_type');
    return _sqlite3_value_type(
      arg0,
    );
  }

  _dart_sqlite3_value_type _sqlite3_value_type;

  int sqlite3_value_numeric_type(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_numeric_type ??= _dylib.lookupFunction<
        _c_sqlite3_value_numeric_type,
        _dart_sqlite3_value_numeric_type>('sqlite3_value_numeric_type');
    return _sqlite3_value_numeric_type(
      arg0,
    );
  }

  _dart_sqlite3_value_numeric_type _sqlite3_value_numeric_type;

  int sqlite3_value_nochange(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_nochange ??= _dylib.lookupFunction<_c_sqlite3_value_nochange,
        _dart_sqlite3_value_nochange>('sqlite3_value_nochange');
    return _sqlite3_value_nochange(
      arg0,
    );
  }

  _dart_sqlite3_value_nochange _sqlite3_value_nochange;

  int sqlite3_value_frombind(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_frombind ??= _dylib.lookupFunction<_c_sqlite3_value_frombind,
        _dart_sqlite3_value_frombind>('sqlite3_value_frombind');
    return _sqlite3_value_frombind(
      arg0,
    );
  }

  _dart_sqlite3_value_frombind _sqlite3_value_frombind;

  int sqlite3_value_subtype(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_subtype ??= _dylib.lookupFunction<_c_sqlite3_value_subtype,
        _dart_sqlite3_value_subtype>('sqlite3_value_subtype');
    return _sqlite3_value_subtype(
      arg0,
    );
  }

  _dart_sqlite3_value_subtype _sqlite3_value_subtype;

  ffi.Pointer<sqlite3_value> sqlite3_value_dup(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_dup ??=
        _dylib.lookupFunction<_c_sqlite3_value_dup, _dart_sqlite3_value_dup>(
            'sqlite3_value_dup');
    return _sqlite3_value_dup(
      arg0,
    );
  }

  _dart_sqlite3_value_dup _sqlite3_value_dup;

  void sqlite3_value_free(
    ffi.Pointer<sqlite3_value> arg0,
  ) {
    _sqlite3_value_free ??=
        _dylib.lookupFunction<_c_sqlite3_value_free, _dart_sqlite3_value_free>(
            'sqlite3_value_free');
    return _sqlite3_value_free(
      arg0,
    );
  }

  _dart_sqlite3_value_free _sqlite3_value_free;

  ffi.Pointer<ffi.Void> sqlite3_aggregate_context(
    ffi.Pointer<sqlite3_context> arg0,
    int nBytes,
  ) {
    _sqlite3_aggregate_context ??= _dylib.lookupFunction<
        _c_sqlite3_aggregate_context,
        _dart_sqlite3_aggregate_context>('sqlite3_aggregate_context');
    return _sqlite3_aggregate_context(
      arg0,
      nBytes,
    );
  }

  _dart_sqlite3_aggregate_context _sqlite3_aggregate_context;

  ffi.Pointer<ffi.Void> sqlite3_user_data(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_user_data ??=
        _dylib.lookupFunction<_c_sqlite3_user_data, _dart_sqlite3_user_data>(
            'sqlite3_user_data');
    return _sqlite3_user_data(
      arg0,
    );
  }

  _dart_sqlite3_user_data _sqlite3_user_data;

  ffi.Pointer<sqlite3> sqlite3_context_db_handle(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_context_db_handle ??= _dylib.lookupFunction<
        _c_sqlite3_context_db_handle,
        _dart_sqlite3_context_db_handle>('sqlite3_context_db_handle');
    return _sqlite3_context_db_handle(
      arg0,
    );
  }

  _dart_sqlite3_context_db_handle _sqlite3_context_db_handle;

  ffi.Pointer<ffi.Void> sqlite3_get_auxdata(
    ffi.Pointer<sqlite3_context> arg0,
    int N,
  ) {
    _sqlite3_get_auxdata ??= _dylib.lookupFunction<_c_sqlite3_get_auxdata,
        _dart_sqlite3_get_auxdata>('sqlite3_get_auxdata');
    return _sqlite3_get_auxdata(
      arg0,
      N,
    );
  }

  _dart_sqlite3_get_auxdata _sqlite3_get_auxdata;

  void sqlite3_set_auxdata(
    ffi.Pointer<sqlite3_context> arg0,
    int N,
    ffi.Pointer<ffi.Void> arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_60>> arg3,
  ) {
    _sqlite3_set_auxdata ??= _dylib.lookupFunction<_c_sqlite3_set_auxdata,
        _dart_sqlite3_set_auxdata>('sqlite3_set_auxdata');
    return _sqlite3_set_auxdata(
      arg0,
      N,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_set_auxdata _sqlite3_set_auxdata;

  void sqlite3_result_blob(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_61>> arg3,
  ) {
    _sqlite3_result_blob ??= _dylib.lookupFunction<_c_sqlite3_result_blob,
        _dart_sqlite3_result_blob>('sqlite3_result_blob');
    return _sqlite3_result_blob(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_blob _sqlite3_result_blob;

  void sqlite3_result_blob64(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_62>> arg3,
  ) {
    _sqlite3_result_blob64 ??= _dylib.lookupFunction<_c_sqlite3_result_blob64,
        _dart_sqlite3_result_blob64>('sqlite3_result_blob64');
    return _sqlite3_result_blob64(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_blob64 _sqlite3_result_blob64;

  void sqlite3_result_double(
    ffi.Pointer<sqlite3_context> arg0,
    double arg1,
  ) {
    _sqlite3_result_double ??= _dylib.lookupFunction<_c_sqlite3_result_double,
        _dart_sqlite3_result_double>('sqlite3_result_double');
    return _sqlite3_result_double(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_double _sqlite3_result_double;

  void sqlite3_result_error(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Int8> arg1,
    int arg2,
  ) {
    _sqlite3_result_error ??= _dylib.lookupFunction<_c_sqlite3_result_error,
        _dart_sqlite3_result_error>('sqlite3_result_error');
    return _sqlite3_result_error(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_result_error _sqlite3_result_error;

  void sqlite3_result_error16(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
  ) {
    _sqlite3_result_error16 ??= _dylib.lookupFunction<_c_sqlite3_result_error16,
        _dart_sqlite3_result_error16>('sqlite3_result_error16');
    return _sqlite3_result_error16(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_result_error16 _sqlite3_result_error16;

  void sqlite3_result_error_toobig(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_result_error_toobig ??= _dylib.lookupFunction<
        _c_sqlite3_result_error_toobig,
        _dart_sqlite3_result_error_toobig>('sqlite3_result_error_toobig');
    return _sqlite3_result_error_toobig(
      arg0,
    );
  }

  _dart_sqlite3_result_error_toobig _sqlite3_result_error_toobig;

  void sqlite3_result_error_nomem(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_result_error_nomem ??= _dylib.lookupFunction<
        _c_sqlite3_result_error_nomem,
        _dart_sqlite3_result_error_nomem>('sqlite3_result_error_nomem');
    return _sqlite3_result_error_nomem(
      arg0,
    );
  }

  _dart_sqlite3_result_error_nomem _sqlite3_result_error_nomem;

  void sqlite3_result_error_code(
    ffi.Pointer<sqlite3_context> arg0,
    int arg1,
  ) {
    _sqlite3_result_error_code ??= _dylib.lookupFunction<
        _c_sqlite3_result_error_code,
        _dart_sqlite3_result_error_code>('sqlite3_result_error_code');
    return _sqlite3_result_error_code(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_error_code _sqlite3_result_error_code;

  void sqlite3_result_int(
    ffi.Pointer<sqlite3_context> arg0,
    int arg1,
  ) {
    _sqlite3_result_int ??=
        _dylib.lookupFunction<_c_sqlite3_result_int, _dart_sqlite3_result_int>(
            'sqlite3_result_int');
    return _sqlite3_result_int(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_int _sqlite3_result_int;

  void sqlite3_result_int64(
    ffi.Pointer<sqlite3_context> arg0,
    int arg1,
  ) {
    _sqlite3_result_int64 ??= _dylib.lookupFunction<_c_sqlite3_result_int64,
        _dart_sqlite3_result_int64>('sqlite3_result_int64');
    return _sqlite3_result_int64(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_int64 _sqlite3_result_int64;

  void sqlite3_result_null(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_result_null ??= _dylib.lookupFunction<_c_sqlite3_result_null,
        _dart_sqlite3_result_null>('sqlite3_result_null');
    return _sqlite3_result_null(
      arg0,
    );
  }

  _dart_sqlite3_result_null _sqlite3_result_null;

  void sqlite3_result_text(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Int8> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_63>> arg3,
  ) {
    _sqlite3_result_text ??= _dylib.lookupFunction<_c_sqlite3_result_text,
        _dart_sqlite3_result_text>('sqlite3_result_text');
    return _sqlite3_result_text(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_text _sqlite3_result_text;

  void sqlite3_result_text64(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Int8> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_64>> arg3,
    int encoding,
  ) {
    _sqlite3_result_text64 ??= _dylib.lookupFunction<_c_sqlite3_result_text64,
        _dart_sqlite3_result_text64>('sqlite3_result_text64');
    return _sqlite3_result_text64(
      arg0,
      arg1,
      arg2,
      arg3,
      encoding,
    );
  }

  _dart_sqlite3_result_text64 _sqlite3_result_text64;

  void sqlite3_result_text16(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_65>> arg3,
  ) {
    _sqlite3_result_text16 ??= _dylib.lookupFunction<_c_sqlite3_result_text16,
        _dart_sqlite3_result_text16>('sqlite3_result_text16');
    return _sqlite3_result_text16(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_text16 _sqlite3_result_text16;

  void sqlite3_result_text16le(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_66>> arg3,
  ) {
    _sqlite3_result_text16le ??= _dylib.lookupFunction<
        _c_sqlite3_result_text16le,
        _dart_sqlite3_result_text16le>('sqlite3_result_text16le');
    return _sqlite3_result_text16le(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_text16le _sqlite3_result_text16le;

  void sqlite3_result_text16be(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    int arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_67>> arg3,
  ) {
    _sqlite3_result_text16be ??= _dylib.lookupFunction<
        _c_sqlite3_result_text16be,
        _dart_sqlite3_result_text16be>('sqlite3_result_text16be');
    return _sqlite3_result_text16be(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_text16be _sqlite3_result_text16be;

  void sqlite3_result_value(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<sqlite3_value> arg1,
  ) {
    _sqlite3_result_value ??= _dylib.lookupFunction<_c_sqlite3_result_value,
        _dart_sqlite3_result_value>('sqlite3_result_value');
    return _sqlite3_result_value(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_value _sqlite3_result_value;

  void sqlite3_result_pointer(
    ffi.Pointer<sqlite3_context> arg0,
    ffi.Pointer<ffi.Void> arg1,
    ffi.Pointer<ffi.Int8> arg2,
    ffi.Pointer<ffi.NativeFunction<_typedefC_68>> arg3,
  ) {
    _sqlite3_result_pointer ??= _dylib.lookupFunction<_c_sqlite3_result_pointer,
        _dart_sqlite3_result_pointer>('sqlite3_result_pointer');
    return _sqlite3_result_pointer(
      arg0,
      arg1,
      arg2,
      arg3,
    );
  }

  _dart_sqlite3_result_pointer _sqlite3_result_pointer;

  void sqlite3_result_zeroblob(
    ffi.Pointer<sqlite3_context> arg0,
    int n,
  ) {
    _sqlite3_result_zeroblob ??= _dylib.lookupFunction<
        _c_sqlite3_result_zeroblob,
        _dart_sqlite3_result_zeroblob>('sqlite3_result_zeroblob');
    return _sqlite3_result_zeroblob(
      arg0,
      n,
    );
  }

  _dart_sqlite3_result_zeroblob _sqlite3_result_zeroblob;

  int sqlite3_result_zeroblob64(
    ffi.Pointer<sqlite3_context> arg0,
    int n,
  ) {
    _sqlite3_result_zeroblob64 ??= _dylib.lookupFunction<
        _c_sqlite3_result_zeroblob64,
        _dart_sqlite3_result_zeroblob64>('sqlite3_result_zeroblob64');
    return _sqlite3_result_zeroblob64(
      arg0,
      n,
    );
  }

  _dart_sqlite3_result_zeroblob64 _sqlite3_result_zeroblob64;

  void sqlite3_result_subtype(
    ffi.Pointer<sqlite3_context> arg0,
    int arg1,
  ) {
    _sqlite3_result_subtype ??= _dylib.lookupFunction<_c_sqlite3_result_subtype,
        _dart_sqlite3_result_subtype>('sqlite3_result_subtype');
    return _sqlite3_result_subtype(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_result_subtype _sqlite3_result_subtype;

  int sqlite3_create_collation(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zName,
    int eTextRep,
    ffi.Pointer<ffi.Void> pArg,
    ffi.Pointer<ffi.NativeFunction<_typedefC_69>> xCompare,
  ) {
    _sqlite3_create_collation ??= _dylib.lookupFunction<
        _c_sqlite3_create_collation,
        _dart_sqlite3_create_collation>('sqlite3_create_collation');
    return _sqlite3_create_collation(
      arg0,
      zName,
      eTextRep,
      pArg,
      xCompare,
    );
  }

  _dart_sqlite3_create_collation _sqlite3_create_collation;

  int sqlite3_create_collation_v2(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zName,
    int eTextRep,
    ffi.Pointer<ffi.Void> pArg,
    ffi.Pointer<ffi.NativeFunction<_typedefC_70>> xCompare,
    ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xDestroy,
  ) {
    _sqlite3_create_collation_v2 ??= _dylib.lookupFunction<
        _c_sqlite3_create_collation_v2,
        _dart_sqlite3_create_collation_v2>('sqlite3_create_collation_v2');
    return _sqlite3_create_collation_v2(
      arg0,
      zName,
      eTextRep,
      pArg,
      xCompare,
      xDestroy,
    );
  }

  _dart_sqlite3_create_collation_v2 _sqlite3_create_collation_v2;

  int sqlite3_create_collation16(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Void> zName,
    int eTextRep,
    ffi.Pointer<ffi.Void> pArg,
    ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xCompare,
  ) {
    _sqlite3_create_collation16 ??= _dylib.lookupFunction<
        _c_sqlite3_create_collation16,
        _dart_sqlite3_create_collation16>('sqlite3_create_collation16');
    return _sqlite3_create_collation16(
      arg0,
      zName,
      eTextRep,
      pArg,
      xCompare,
    );
  }

  _dart_sqlite3_create_collation16 _sqlite3_create_collation16;

  int sqlite3_collation_needed(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Void> arg1,
    ffi.Pointer<ffi.NativeFunction<_typedefC_73>> arg2,
  ) {
    _sqlite3_collation_needed ??= _dylib.lookupFunction<
        _c_sqlite3_collation_needed,
        _dart_sqlite3_collation_needed>('sqlite3_collation_needed');
    return _sqlite3_collation_needed(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_collation_needed _sqlite3_collation_needed;

  int sqlite3_collation_needed16(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Void> arg1,
    ffi.Pointer<ffi.NativeFunction<_typedefC_74>> arg2,
  ) {
    _sqlite3_collation_needed16 ??= _dylib.lookupFunction<
        _c_sqlite3_collation_needed16,
        _dart_sqlite3_collation_needed16>('sqlite3_collation_needed16');
    return _sqlite3_collation_needed16(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_collation_needed16 _sqlite3_collation_needed16;

  int sqlite3_sleep(
    int arg0,
  ) {
    _sqlite3_sleep ??= _dylib
        .lookupFunction<_c_sqlite3_sleep, _dart_sqlite3_sleep>('sqlite3_sleep');
    return _sqlite3_sleep(
      arg0,
    );
  }

  _dart_sqlite3_sleep _sqlite3_sleep;

  int sqlite3_win32_set_directory(
    int type,
    ffi.Pointer<ffi.Void> zValue,
  ) {
    _sqlite3_win32_set_directory ??= _dylib.lookupFunction<
        _c_sqlite3_win32_set_directory,
        _dart_sqlite3_win32_set_directory>('sqlite3_win32_set_directory');
    return _sqlite3_win32_set_directory(
      type,
      zValue,
    );
  }

  _dart_sqlite3_win32_set_directory _sqlite3_win32_set_directory;

  int sqlite3_win32_set_directory8(
    int type,
    ffi.Pointer<ffi.Int8> zValue,
  ) {
    _sqlite3_win32_set_directory8 ??= _dylib.lookupFunction<
        _c_sqlite3_win32_set_directory8,
        _dart_sqlite3_win32_set_directory8>('sqlite3_win32_set_directory8');
    return _sqlite3_win32_set_directory8(
      type,
      zValue,
    );
  }

  _dart_sqlite3_win32_set_directory8 _sqlite3_win32_set_directory8;

  int sqlite3_win32_set_directory16(
    int type,
    ffi.Pointer<ffi.Void> zValue,
  ) {
    _sqlite3_win32_set_directory16 ??= _dylib.lookupFunction<
        _c_sqlite3_win32_set_directory16,
        _dart_sqlite3_win32_set_directory16>('sqlite3_win32_set_directory16');
    return _sqlite3_win32_set_directory16(
      type,
      zValue,
    );
  }

  _dart_sqlite3_win32_set_directory16 _sqlite3_win32_set_directory16;

  int sqlite3_get_autocommit(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_get_autocommit ??= _dylib.lookupFunction<_c_sqlite3_get_autocommit,
        _dart_sqlite3_get_autocommit>('sqlite3_get_autocommit');
    return _sqlite3_get_autocommit(
      arg0,
    );
  }

  _dart_sqlite3_get_autocommit _sqlite3_get_autocommit;

  ffi.Pointer<sqlite3> sqlite3_db_handle(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_db_handle ??=
        _dylib.lookupFunction<_c_sqlite3_db_handle, _dart_sqlite3_db_handle>(
            'sqlite3_db_handle');
    return _sqlite3_db_handle(
      arg0,
    );
  }

  _dart_sqlite3_db_handle _sqlite3_db_handle;

  ffi.Pointer<ffi.Int8> sqlite3_db_filename(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDbName,
  ) {
    _sqlite3_db_filename ??= _dylib.lookupFunction<_c_sqlite3_db_filename,
        _dart_sqlite3_db_filename>('sqlite3_db_filename');
    return _sqlite3_db_filename(
      db,
      zDbName,
    );
  }

  _dart_sqlite3_db_filename _sqlite3_db_filename;

  int sqlite3_db_readonly(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDbName,
  ) {
    _sqlite3_db_readonly ??= _dylib.lookupFunction<_c_sqlite3_db_readonly,
        _dart_sqlite3_db_readonly>('sqlite3_db_readonly');
    return _sqlite3_db_readonly(
      db,
      zDbName,
    );
  }

  _dart_sqlite3_db_readonly _sqlite3_db_readonly;

  ffi.Pointer<sqlite3_stmt> sqlite3_next_stmt(
    ffi.Pointer<sqlite3> pDb,
    ffi.Pointer<sqlite3_stmt> pStmt,
  ) {
    _sqlite3_next_stmt ??=
        _dylib.lookupFunction<_c_sqlite3_next_stmt, _dart_sqlite3_next_stmt>(
            'sqlite3_next_stmt');
    return _sqlite3_next_stmt(
      pDb,
      pStmt,
    );
  }

  _dart_sqlite3_next_stmt _sqlite3_next_stmt;

  ffi.Pointer<ffi.Void> sqlite3_commit_hook(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_75>> arg1,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_commit_hook ??= _dylib.lookupFunction<_c_sqlite3_commit_hook,
        _dart_sqlite3_commit_hook>('sqlite3_commit_hook');
    return _sqlite3_commit_hook(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_commit_hook _sqlite3_commit_hook;

  ffi.Pointer<ffi.Void> sqlite3_rollback_hook(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_76>> arg1,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_rollback_hook ??= _dylib.lookupFunction<_c_sqlite3_rollback_hook,
        _dart_sqlite3_rollback_hook>('sqlite3_rollback_hook');
    return _sqlite3_rollback_hook(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_rollback_hook _sqlite3_rollback_hook;

  ffi.Pointer<ffi.Void> sqlite3_update_hook(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_77>> arg1,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_update_hook ??= _dylib.lookupFunction<_c_sqlite3_update_hook,
        _dart_sqlite3_update_hook>('sqlite3_update_hook');
    return _sqlite3_update_hook(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_update_hook _sqlite3_update_hook;

  int sqlite3_enable_shared_cache(
    int arg0,
  ) {
    _sqlite3_enable_shared_cache ??= _dylib.lookupFunction<
        _c_sqlite3_enable_shared_cache,
        _dart_sqlite3_enable_shared_cache>('sqlite3_enable_shared_cache');
    return _sqlite3_enable_shared_cache(
      arg0,
    );
  }

  _dart_sqlite3_enable_shared_cache _sqlite3_enable_shared_cache;

  int sqlite3_release_memory(
    int arg0,
  ) {
    _sqlite3_release_memory ??= _dylib.lookupFunction<_c_sqlite3_release_memory,
        _dart_sqlite3_release_memory>('sqlite3_release_memory');
    return _sqlite3_release_memory(
      arg0,
    );
  }

  _dart_sqlite3_release_memory _sqlite3_release_memory;

  int sqlite3_db_release_memory(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_db_release_memory ??= _dylib.lookupFunction<
        _c_sqlite3_db_release_memory,
        _dart_sqlite3_db_release_memory>('sqlite3_db_release_memory');
    return _sqlite3_db_release_memory(
      arg0,
    );
  }

  _dart_sqlite3_db_release_memory _sqlite3_db_release_memory;

  int sqlite3_soft_heap_limit64(
    int N,
  ) {
    _sqlite3_soft_heap_limit64 ??= _dylib.lookupFunction<
        _c_sqlite3_soft_heap_limit64,
        _dart_sqlite3_soft_heap_limit64>('sqlite3_soft_heap_limit64');
    return _sqlite3_soft_heap_limit64(
      N,
    );
  }

  _dart_sqlite3_soft_heap_limit64 _sqlite3_soft_heap_limit64;

  int sqlite3_hard_heap_limit64(
    int N,
  ) {
    _sqlite3_hard_heap_limit64 ??= _dylib.lookupFunction<
        _c_sqlite3_hard_heap_limit64,
        _dart_sqlite3_hard_heap_limit64>('sqlite3_hard_heap_limit64');
    return _sqlite3_hard_heap_limit64(
      N,
    );
  }

  _dart_sqlite3_hard_heap_limit64 _sqlite3_hard_heap_limit64;

  void sqlite3_soft_heap_limit(
    int N,
  ) {
    _sqlite3_soft_heap_limit ??= _dylib.lookupFunction<
        _c_sqlite3_soft_heap_limit,
        _dart_sqlite3_soft_heap_limit>('sqlite3_soft_heap_limit');
    return _sqlite3_soft_heap_limit(
      N,
    );
  }

  _dart_sqlite3_soft_heap_limit _sqlite3_soft_heap_limit;

  int sqlite3_table_column_metadata(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDbName,
    ffi.Pointer<ffi.Int8> zTableName,
    ffi.Pointer<ffi.Int8> zColumnName,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzDataType,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzCollSeq,
    ffi.Pointer<ffi.Int32> pNotNull,
    ffi.Pointer<ffi.Int32> pPrimaryKey,
    ffi.Pointer<ffi.Int32> pAutoinc,
  ) {
    _sqlite3_table_column_metadata ??= _dylib.lookupFunction<
        _c_sqlite3_table_column_metadata,
        _dart_sqlite3_table_column_metadata>('sqlite3_table_column_metadata');
    return _sqlite3_table_column_metadata(
      db,
      zDbName,
      zTableName,
      zColumnName,
      pzDataType,
      pzCollSeq,
      pNotNull,
      pPrimaryKey,
      pAutoinc,
    );
  }

  _dart_sqlite3_table_column_metadata _sqlite3_table_column_metadata;

  int sqlite3_load_extension(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zFile,
    ffi.Pointer<ffi.Int8> zProc,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrMsg,
  ) {
    _sqlite3_load_extension ??= _dylib.lookupFunction<_c_sqlite3_load_extension,
        _dart_sqlite3_load_extension>('sqlite3_load_extension');
    return _sqlite3_load_extension(
      db,
      zFile,
      zProc,
      pzErrMsg,
    );
  }

  _dart_sqlite3_load_extension _sqlite3_load_extension;

  int sqlite3_enable_load_extension(
    ffi.Pointer<sqlite3> db,
    int onoff,
  ) {
    _sqlite3_enable_load_extension ??= _dylib.lookupFunction<
        _c_sqlite3_enable_load_extension,
        _dart_sqlite3_enable_load_extension>('sqlite3_enable_load_extension');
    return _sqlite3_enable_load_extension(
      db,
      onoff,
    );
  }

  _dart_sqlite3_enable_load_extension _sqlite3_enable_load_extension;

  int sqlite3_auto_extension(
    ffi.Pointer<ffi.NativeFunction<_typedefC_78>> xEntryPoint,
  ) {
    _sqlite3_auto_extension ??= _dylib.lookupFunction<_c_sqlite3_auto_extension,
        _dart_sqlite3_auto_extension>('sqlite3_auto_extension');
    return _sqlite3_auto_extension(
      xEntryPoint,
    );
  }

  _dart_sqlite3_auto_extension _sqlite3_auto_extension;

  int sqlite3_cancel_auto_extension(
    ffi.Pointer<ffi.NativeFunction<_typedefC_79>> xEntryPoint,
  ) {
    _sqlite3_cancel_auto_extension ??= _dylib.lookupFunction<
        _c_sqlite3_cancel_auto_extension,
        _dart_sqlite3_cancel_auto_extension>('sqlite3_cancel_auto_extension');
    return _sqlite3_cancel_auto_extension(
      xEntryPoint,
    );
  }

  _dart_sqlite3_cancel_auto_extension _sqlite3_cancel_auto_extension;

  void sqlite3_reset_auto_extension() {
    _sqlite3_reset_auto_extension ??= _dylib.lookupFunction<
        _c_sqlite3_reset_auto_extension,
        _dart_sqlite3_reset_auto_extension>('sqlite3_reset_auto_extension');
    return _sqlite3_reset_auto_extension();
  }

  _dart_sqlite3_reset_auto_extension _sqlite3_reset_auto_extension;

  int sqlite3_create_module(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zName,
    ffi.Pointer<sqlite3_module> p,
    ffi.Pointer<ffi.Void> pClientData,
  ) {
    _sqlite3_create_module ??= _dylib.lookupFunction<_c_sqlite3_create_module,
        _dart_sqlite3_create_module>('sqlite3_create_module');
    return _sqlite3_create_module(
      db,
      zName,
      p,
      pClientData,
    );
  }

  _dart_sqlite3_create_module _sqlite3_create_module;

  int sqlite3_create_module_v2(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zName,
    ffi.Pointer<sqlite3_module> p,
    ffi.Pointer<ffi.Void> pClientData,
    ffi.Pointer<ffi.NativeFunction<_typedefC_80>> xDestroy,
  ) {
    _sqlite3_create_module_v2 ??= _dylib.lookupFunction<
        _c_sqlite3_create_module_v2,
        _dart_sqlite3_create_module_v2>('sqlite3_create_module_v2');
    return _sqlite3_create_module_v2(
      db,
      zName,
      p,
      pClientData,
      xDestroy,
    );
  }

  _dart_sqlite3_create_module_v2 _sqlite3_create_module_v2;

  int sqlite3_drop_modules(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> azKeep,
  ) {
    _sqlite3_drop_modules ??= _dylib.lookupFunction<_c_sqlite3_drop_modules,
        _dart_sqlite3_drop_modules>('sqlite3_drop_modules');
    return _sqlite3_drop_modules(
      db,
      azKeep,
    );
  }

  _dart_sqlite3_drop_modules _sqlite3_drop_modules;

  int sqlite3_declare_vtab(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zSQL,
  ) {
    _sqlite3_declare_vtab ??= _dylib.lookupFunction<_c_sqlite3_declare_vtab,
        _dart_sqlite3_declare_vtab>('sqlite3_declare_vtab');
    return _sqlite3_declare_vtab(
      arg0,
      zSQL,
    );
  }

  _dart_sqlite3_declare_vtab _sqlite3_declare_vtab;

  int sqlite3_overload_function(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zFuncName,
    int nArg,
  ) {
    _sqlite3_overload_function ??= _dylib.lookupFunction<
        _c_sqlite3_overload_function,
        _dart_sqlite3_overload_function>('sqlite3_overload_function');
    return _sqlite3_overload_function(
      arg0,
      zFuncName,
      nArg,
    );
  }

  _dart_sqlite3_overload_function _sqlite3_overload_function;

  int sqlite3_blob_open(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zDb,
    ffi.Pointer<ffi.Int8> zTable,
    ffi.Pointer<ffi.Int8> zColumn,
    int iRow,
    int flags,
    ffi.Pointer<ffi.Pointer<sqlite3_blob>> ppBlob,
  ) {
    _sqlite3_blob_open ??=
        _dylib.lookupFunction<_c_sqlite3_blob_open, _dart_sqlite3_blob_open>(
            'sqlite3_blob_open');
    return _sqlite3_blob_open(
      arg0,
      zDb,
      zTable,
      zColumn,
      iRow,
      flags,
      ppBlob,
    );
  }

  _dart_sqlite3_blob_open _sqlite3_blob_open;

  int sqlite3_blob_reopen(
    ffi.Pointer<sqlite3_blob> arg0,
    int arg1,
  ) {
    _sqlite3_blob_reopen ??= _dylib.lookupFunction<_c_sqlite3_blob_reopen,
        _dart_sqlite3_blob_reopen>('sqlite3_blob_reopen');
    return _sqlite3_blob_reopen(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_blob_reopen _sqlite3_blob_reopen;

  int sqlite3_blob_close(
    ffi.Pointer<sqlite3_blob> arg0,
  ) {
    _sqlite3_blob_close ??=
        _dylib.lookupFunction<_c_sqlite3_blob_close, _dart_sqlite3_blob_close>(
            'sqlite3_blob_close');
    return _sqlite3_blob_close(
      arg0,
    );
  }

  _dart_sqlite3_blob_close _sqlite3_blob_close;

  int sqlite3_blob_bytes(
    ffi.Pointer<sqlite3_blob> arg0,
  ) {
    _sqlite3_blob_bytes ??=
        _dylib.lookupFunction<_c_sqlite3_blob_bytes, _dart_sqlite3_blob_bytes>(
            'sqlite3_blob_bytes');
    return _sqlite3_blob_bytes(
      arg0,
    );
  }

  _dart_sqlite3_blob_bytes _sqlite3_blob_bytes;

  int sqlite3_blob_read(
    ffi.Pointer<sqlite3_blob> arg0,
    ffi.Pointer<ffi.Void> Z,
    int N,
    int iOffset,
  ) {
    _sqlite3_blob_read ??=
        _dylib.lookupFunction<_c_sqlite3_blob_read, _dart_sqlite3_blob_read>(
            'sqlite3_blob_read');
    return _sqlite3_blob_read(
      arg0,
      Z,
      N,
      iOffset,
    );
  }

  _dart_sqlite3_blob_read _sqlite3_blob_read;

  int sqlite3_blob_write(
    ffi.Pointer<sqlite3_blob> arg0,
    ffi.Pointer<ffi.Void> z,
    int n,
    int iOffset,
  ) {
    _sqlite3_blob_write ??=
        _dylib.lookupFunction<_c_sqlite3_blob_write, _dart_sqlite3_blob_write>(
            'sqlite3_blob_write');
    return _sqlite3_blob_write(
      arg0,
      z,
      n,
      iOffset,
    );
  }

  _dart_sqlite3_blob_write _sqlite3_blob_write;

  ffi.Pointer<sqlite3_vfs> sqlite3_vfs_find(
    ffi.Pointer<ffi.Int8> zVfsName,
  ) {
    _sqlite3_vfs_find ??=
        _dylib.lookupFunction<_c_sqlite3_vfs_find, _dart_sqlite3_vfs_find>(
            'sqlite3_vfs_find');
    return _sqlite3_vfs_find(
      zVfsName,
    );
  }

  _dart_sqlite3_vfs_find _sqlite3_vfs_find;

  int sqlite3_vfs_register(
    ffi.Pointer<sqlite3_vfs> arg0,
    int makeDflt,
  ) {
    _sqlite3_vfs_register ??= _dylib.lookupFunction<_c_sqlite3_vfs_register,
        _dart_sqlite3_vfs_register>('sqlite3_vfs_register');
    return _sqlite3_vfs_register(
      arg0,
      makeDflt,
    );
  }

  _dart_sqlite3_vfs_register _sqlite3_vfs_register;

  int sqlite3_vfs_unregister(
    ffi.Pointer<sqlite3_vfs> arg0,
  ) {
    _sqlite3_vfs_unregister ??= _dylib.lookupFunction<_c_sqlite3_vfs_unregister,
        _dart_sqlite3_vfs_unregister>('sqlite3_vfs_unregister');
    return _sqlite3_vfs_unregister(
      arg0,
    );
  }

  _dart_sqlite3_vfs_unregister _sqlite3_vfs_unregister;

  ffi.Pointer<sqlite3_mutex> sqlite3_mutex_alloc(
    int arg0,
  ) {
    _sqlite3_mutex_alloc ??= _dylib.lookupFunction<_c_sqlite3_mutex_alloc,
        _dart_sqlite3_mutex_alloc>('sqlite3_mutex_alloc');
    return _sqlite3_mutex_alloc(
      arg0,
    );
  }

  _dart_sqlite3_mutex_alloc _sqlite3_mutex_alloc;

  void sqlite3_mutex_free(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_free ??=
        _dylib.lookupFunction<_c_sqlite3_mutex_free, _dart_sqlite3_mutex_free>(
            'sqlite3_mutex_free');
    return _sqlite3_mutex_free(
      arg0,
    );
  }

  _dart_sqlite3_mutex_free _sqlite3_mutex_free;

  void sqlite3_mutex_enter(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_enter ??= _dylib.lookupFunction<_c_sqlite3_mutex_enter,
        _dart_sqlite3_mutex_enter>('sqlite3_mutex_enter');
    return _sqlite3_mutex_enter(
      arg0,
    );
  }

  _dart_sqlite3_mutex_enter _sqlite3_mutex_enter;

  int sqlite3_mutex_try(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_try ??=
        _dylib.lookupFunction<_c_sqlite3_mutex_try, _dart_sqlite3_mutex_try>(
            'sqlite3_mutex_try');
    return _sqlite3_mutex_try(
      arg0,
    );
  }

  _dart_sqlite3_mutex_try _sqlite3_mutex_try;

  void sqlite3_mutex_leave(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_leave ??= _dylib.lookupFunction<_c_sqlite3_mutex_leave,
        _dart_sqlite3_mutex_leave>('sqlite3_mutex_leave');
    return _sqlite3_mutex_leave(
      arg0,
    );
  }

  _dart_sqlite3_mutex_leave _sqlite3_mutex_leave;

  int sqlite3_mutex_held(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_held ??=
        _dylib.lookupFunction<_c_sqlite3_mutex_held, _dart_sqlite3_mutex_held>(
            'sqlite3_mutex_held');
    return _sqlite3_mutex_held(
      arg0,
    );
  }

  _dart_sqlite3_mutex_held _sqlite3_mutex_held;

  int sqlite3_mutex_notheld(
    ffi.Pointer<sqlite3_mutex> arg0,
  ) {
    _sqlite3_mutex_notheld ??= _dylib.lookupFunction<_c_sqlite3_mutex_notheld,
        _dart_sqlite3_mutex_notheld>('sqlite3_mutex_notheld');
    return _sqlite3_mutex_notheld(
      arg0,
    );
  }

  _dart_sqlite3_mutex_notheld _sqlite3_mutex_notheld;

  ffi.Pointer<sqlite3_mutex> sqlite3_db_mutex(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_db_mutex ??=
        _dylib.lookupFunction<_c_sqlite3_db_mutex, _dart_sqlite3_db_mutex>(
            'sqlite3_db_mutex');
    return _sqlite3_db_mutex(
      arg0,
    );
  }

  _dart_sqlite3_db_mutex _sqlite3_db_mutex;

  int sqlite3_file_control(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.Int8> zDbName,
    int op,
    ffi.Pointer<ffi.Void> arg3,
  ) {
    _sqlite3_file_control ??= _dylib.lookupFunction<_c_sqlite3_file_control,
        _dart_sqlite3_file_control>('sqlite3_file_control');
    return _sqlite3_file_control(
      arg0,
      zDbName,
      op,
      arg3,
    );
  }

  _dart_sqlite3_file_control _sqlite3_file_control;

  int sqlite3_test_control(
    int op,
  ) {
    _sqlite3_test_control ??= _dylib.lookupFunction<_c_sqlite3_test_control,
        _dart_sqlite3_test_control>('sqlite3_test_control');
    return _sqlite3_test_control(
      op,
    );
  }

  _dart_sqlite3_test_control _sqlite3_test_control;

  int sqlite3_keyword_count() {
    _sqlite3_keyword_count ??= _dylib.lookupFunction<_c_sqlite3_keyword_count,
        _dart_sqlite3_keyword_count>('sqlite3_keyword_count');
    return _sqlite3_keyword_count();
  }

  _dart_sqlite3_keyword_count _sqlite3_keyword_count;

  int sqlite3_keyword_name(
    int arg0,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> arg1,
    ffi.Pointer<ffi.Int32> arg2,
  ) {
    _sqlite3_keyword_name ??= _dylib.lookupFunction<_c_sqlite3_keyword_name,
        _dart_sqlite3_keyword_name>('sqlite3_keyword_name');
    return _sqlite3_keyword_name(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_keyword_name _sqlite3_keyword_name;

  int sqlite3_keyword_check(
    ffi.Pointer<ffi.Int8> arg0,
    int arg1,
  ) {
    _sqlite3_keyword_check ??= _dylib.lookupFunction<_c_sqlite3_keyword_check,
        _dart_sqlite3_keyword_check>('sqlite3_keyword_check');
    return _sqlite3_keyword_check(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_keyword_check _sqlite3_keyword_check;

  ffi.Pointer<sqlite3_str> sqlite3_str_new(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_str_new ??=
        _dylib.lookupFunction<_c_sqlite3_str_new, _dart_sqlite3_str_new>(
            'sqlite3_str_new');
    return _sqlite3_str_new(
      arg0,
    );
  }

  _dart_sqlite3_str_new _sqlite3_str_new;

  ffi.Pointer<ffi.Int8> sqlite3_str_finish(
    ffi.Pointer<sqlite3_str> arg0,
  ) {
    _sqlite3_str_finish ??=
        _dylib.lookupFunction<_c_sqlite3_str_finish, _dart_sqlite3_str_finish>(
            'sqlite3_str_finish');
    return _sqlite3_str_finish(
      arg0,
    );
  }

  _dart_sqlite3_str_finish _sqlite3_str_finish;

  void sqlite3_str_appendf(
    ffi.Pointer<sqlite3_str> arg0,
    ffi.Pointer<ffi.Int8> zFormat,
  ) {
    _sqlite3_str_appendf ??= _dylib.lookupFunction<_c_sqlite3_str_appendf,
        _dart_sqlite3_str_appendf>('sqlite3_str_appendf');
    return _sqlite3_str_appendf(
      arg0,
      zFormat,
    );
  }

  _dart_sqlite3_str_appendf _sqlite3_str_appendf;

  void sqlite3_str_append(
    ffi.Pointer<sqlite3_str> arg0,
    ffi.Pointer<ffi.Int8> zIn,
    int N,
  ) {
    _sqlite3_str_append ??=
        _dylib.lookupFunction<_c_sqlite3_str_append, _dart_sqlite3_str_append>(
            'sqlite3_str_append');
    return _sqlite3_str_append(
      arg0,
      zIn,
      N,
    );
  }

  _dart_sqlite3_str_append _sqlite3_str_append;

  void sqlite3_str_appendall(
    ffi.Pointer<sqlite3_str> arg0,
    ffi.Pointer<ffi.Int8> zIn,
  ) {
    _sqlite3_str_appendall ??= _dylib.lookupFunction<_c_sqlite3_str_appendall,
        _dart_sqlite3_str_appendall>('sqlite3_str_appendall');
    return _sqlite3_str_appendall(
      arg0,
      zIn,
    );
  }

  _dart_sqlite3_str_appendall _sqlite3_str_appendall;

  void sqlite3_str_appendchar(
    ffi.Pointer<sqlite3_str> arg0,
    int N,
    int C,
  ) {
    _sqlite3_str_appendchar ??= _dylib.lookupFunction<_c_sqlite3_str_appendchar,
        _dart_sqlite3_str_appendchar>('sqlite3_str_appendchar');
    return _sqlite3_str_appendchar(
      arg0,
      N,
      C,
    );
  }

  _dart_sqlite3_str_appendchar _sqlite3_str_appendchar;

  void sqlite3_str_reset(
    ffi.Pointer<sqlite3_str> arg0,
  ) {
    _sqlite3_str_reset ??=
        _dylib.lookupFunction<_c_sqlite3_str_reset, _dart_sqlite3_str_reset>(
            'sqlite3_str_reset');
    return _sqlite3_str_reset(
      arg0,
    );
  }

  _dart_sqlite3_str_reset _sqlite3_str_reset;

  int sqlite3_str_errcode(
    ffi.Pointer<sqlite3_str> arg0,
  ) {
    _sqlite3_str_errcode ??= _dylib.lookupFunction<_c_sqlite3_str_errcode,
        _dart_sqlite3_str_errcode>('sqlite3_str_errcode');
    return _sqlite3_str_errcode(
      arg0,
    );
  }

  _dart_sqlite3_str_errcode _sqlite3_str_errcode;

  int sqlite3_str_length(
    ffi.Pointer<sqlite3_str> arg0,
  ) {
    _sqlite3_str_length ??=
        _dylib.lookupFunction<_c_sqlite3_str_length, _dart_sqlite3_str_length>(
            'sqlite3_str_length');
    return _sqlite3_str_length(
      arg0,
    );
  }

  _dart_sqlite3_str_length _sqlite3_str_length;

  ffi.Pointer<ffi.Int8> sqlite3_str_value(
    ffi.Pointer<sqlite3_str> arg0,
  ) {
    _sqlite3_str_value ??=
        _dylib.lookupFunction<_c_sqlite3_str_value, _dart_sqlite3_str_value>(
            'sqlite3_str_value');
    return _sqlite3_str_value(
      arg0,
    );
  }

  _dart_sqlite3_str_value _sqlite3_str_value;

  int sqlite3_status(
    int op,
    ffi.Pointer<ffi.Int32> pCurrent,
    ffi.Pointer<ffi.Int32> pHighwater,
    int resetFlag,
  ) {
    _sqlite3_status ??=
        _dylib.lookupFunction<_c_sqlite3_status, _dart_sqlite3_status>(
            'sqlite3_status');
    return _sqlite3_status(
      op,
      pCurrent,
      pHighwater,
      resetFlag,
    );
  }

  _dart_sqlite3_status _sqlite3_status;

  int sqlite3_status64(
    int op,
    ffi.Pointer<ffi.Int64> pCurrent,
    ffi.Pointer<ffi.Int64> pHighwater,
    int resetFlag,
  ) {
    _sqlite3_status64 ??=
        _dylib.lookupFunction<_c_sqlite3_status64, _dart_sqlite3_status64>(
            'sqlite3_status64');
    return _sqlite3_status64(
      op,
      pCurrent,
      pHighwater,
      resetFlag,
    );
  }

  _dart_sqlite3_status64 _sqlite3_status64;

  int sqlite3_db_status(
    ffi.Pointer<sqlite3> arg0,
    int op,
    ffi.Pointer<ffi.Int32> pCur,
    ffi.Pointer<ffi.Int32> pHiwtr,
    int resetFlg,
  ) {
    _sqlite3_db_status ??=
        _dylib.lookupFunction<_c_sqlite3_db_status, _dart_sqlite3_db_status>(
            'sqlite3_db_status');
    return _sqlite3_db_status(
      arg0,
      op,
      pCur,
      pHiwtr,
      resetFlg,
    );
  }

  _dart_sqlite3_db_status _sqlite3_db_status;

  int sqlite3_stmt_status(
    ffi.Pointer<sqlite3_stmt> arg0,
    int op,
    int resetFlg,
  ) {
    _sqlite3_stmt_status ??= _dylib.lookupFunction<_c_sqlite3_stmt_status,
        _dart_sqlite3_stmt_status>('sqlite3_stmt_status');
    return _sqlite3_stmt_status(
      arg0,
      op,
      resetFlg,
    );
  }

  _dart_sqlite3_stmt_status _sqlite3_stmt_status;

  ffi.Pointer<sqlite3_backup> sqlite3_backup_init(
    ffi.Pointer<sqlite3> pDest,
    ffi.Pointer<ffi.Int8> zDestName,
    ffi.Pointer<sqlite3> pSource,
    ffi.Pointer<ffi.Int8> zSourceName,
  ) {
    _sqlite3_backup_init ??= _dylib.lookupFunction<_c_sqlite3_backup_init,
        _dart_sqlite3_backup_init>('sqlite3_backup_init');
    return _sqlite3_backup_init(
      pDest,
      zDestName,
      pSource,
      zSourceName,
    );
  }

  _dart_sqlite3_backup_init _sqlite3_backup_init;

  int sqlite3_backup_step(
    ffi.Pointer<sqlite3_backup> p,
    int nPage,
  ) {
    _sqlite3_backup_step ??= _dylib.lookupFunction<_c_sqlite3_backup_step,
        _dart_sqlite3_backup_step>('sqlite3_backup_step');
    return _sqlite3_backup_step(
      p,
      nPage,
    );
  }

  _dart_sqlite3_backup_step _sqlite3_backup_step;

  int sqlite3_backup_finish(
    ffi.Pointer<sqlite3_backup> p,
  ) {
    _sqlite3_backup_finish ??= _dylib.lookupFunction<_c_sqlite3_backup_finish,
        _dart_sqlite3_backup_finish>('sqlite3_backup_finish');
    return _sqlite3_backup_finish(
      p,
    );
  }

  _dart_sqlite3_backup_finish _sqlite3_backup_finish;

  int sqlite3_backup_remaining(
    ffi.Pointer<sqlite3_backup> p,
  ) {
    _sqlite3_backup_remaining ??= _dylib.lookupFunction<
        _c_sqlite3_backup_remaining,
        _dart_sqlite3_backup_remaining>('sqlite3_backup_remaining');
    return _sqlite3_backup_remaining(
      p,
    );
  }

  _dart_sqlite3_backup_remaining _sqlite3_backup_remaining;

  int sqlite3_backup_pagecount(
    ffi.Pointer<sqlite3_backup> p,
  ) {
    _sqlite3_backup_pagecount ??= _dylib.lookupFunction<
        _c_sqlite3_backup_pagecount,
        _dart_sqlite3_backup_pagecount>('sqlite3_backup_pagecount');
    return _sqlite3_backup_pagecount(
      p,
    );
  }

  _dart_sqlite3_backup_pagecount _sqlite3_backup_pagecount;

  int sqlite3_unlock_notify(
    ffi.Pointer<sqlite3> pBlocked,
    ffi.Pointer<ffi.NativeFunction<_typedefC_81>> xNotify,
    ffi.Pointer<ffi.Void> pNotifyArg,
  ) {
    _sqlite3_unlock_notify ??= _dylib.lookupFunction<_c_sqlite3_unlock_notify,
        _dart_sqlite3_unlock_notify>('sqlite3_unlock_notify');
    return _sqlite3_unlock_notify(
      pBlocked,
      xNotify,
      pNotifyArg,
    );
  }

  _dart_sqlite3_unlock_notify _sqlite3_unlock_notify;

  int sqlite3_stricmp(
    ffi.Pointer<ffi.Int8> arg0,
    ffi.Pointer<ffi.Int8> arg1,
  ) {
    _sqlite3_stricmp ??=
        _dylib.lookupFunction<_c_sqlite3_stricmp, _dart_sqlite3_stricmp>(
            'sqlite3_stricmp');
    return _sqlite3_stricmp(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_stricmp _sqlite3_stricmp;

  int sqlite3_strnicmp(
    ffi.Pointer<ffi.Int8> arg0,
    ffi.Pointer<ffi.Int8> arg1,
    int arg2,
  ) {
    _sqlite3_strnicmp ??=
        _dylib.lookupFunction<_c_sqlite3_strnicmp, _dart_sqlite3_strnicmp>(
            'sqlite3_strnicmp');
    return _sqlite3_strnicmp(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_strnicmp _sqlite3_strnicmp;

  int sqlite3_strglob(
    ffi.Pointer<ffi.Int8> zGlob,
    ffi.Pointer<ffi.Int8> zStr,
  ) {
    _sqlite3_strglob ??=
        _dylib.lookupFunction<_c_sqlite3_strglob, _dart_sqlite3_strglob>(
            'sqlite3_strglob');
    return _sqlite3_strglob(
      zGlob,
      zStr,
    );
  }

  _dart_sqlite3_strglob _sqlite3_strglob;

  int sqlite3_strlike(
    ffi.Pointer<ffi.Int8> zGlob,
    ffi.Pointer<ffi.Int8> zStr,
    int cEsc,
  ) {
    _sqlite3_strlike ??=
        _dylib.lookupFunction<_c_sqlite3_strlike, _dart_sqlite3_strlike>(
            'sqlite3_strlike');
    return _sqlite3_strlike(
      zGlob,
      zStr,
      cEsc,
    );
  }

  _dart_sqlite3_strlike _sqlite3_strlike;

  void sqlite3_log(
    int iErrCode,
    ffi.Pointer<ffi.Int8> zFormat,
  ) {
    _sqlite3_log ??=
        _dylib.lookupFunction<_c_sqlite3_log, _dart_sqlite3_log>('sqlite3_log');
    return _sqlite3_log(
      iErrCode,
      zFormat,
    );
  }

  _dart_sqlite3_log _sqlite3_log;

  ffi.Pointer<ffi.Void> sqlite3_wal_hook(
    ffi.Pointer<sqlite3> arg0,
    ffi.Pointer<ffi.NativeFunction<_typedefC_82>> arg1,
    ffi.Pointer<ffi.Void> arg2,
  ) {
    _sqlite3_wal_hook ??=
        _dylib.lookupFunction<_c_sqlite3_wal_hook, _dart_sqlite3_wal_hook>(
            'sqlite3_wal_hook');
    return _sqlite3_wal_hook(
      arg0,
      arg1,
      arg2,
    );
  }

  _dart_sqlite3_wal_hook _sqlite3_wal_hook;

  int sqlite3_wal_autocheckpoint(
    ffi.Pointer<sqlite3> db,
    int N,
  ) {
    _sqlite3_wal_autocheckpoint ??= _dylib.lookupFunction<
        _c_sqlite3_wal_autocheckpoint,
        _dart_sqlite3_wal_autocheckpoint>('sqlite3_wal_autocheckpoint');
    return _sqlite3_wal_autocheckpoint(
      db,
      N,
    );
  }

  _dart_sqlite3_wal_autocheckpoint _sqlite3_wal_autocheckpoint;

  int sqlite3_wal_checkpoint(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDb,
  ) {
    _sqlite3_wal_checkpoint ??= _dylib.lookupFunction<_c_sqlite3_wal_checkpoint,
        _dart_sqlite3_wal_checkpoint>('sqlite3_wal_checkpoint');
    return _sqlite3_wal_checkpoint(
      db,
      zDb,
    );
  }

  _dart_sqlite3_wal_checkpoint _sqlite3_wal_checkpoint;

  int sqlite3_wal_checkpoint_v2(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDb,
    int eMode,
    ffi.Pointer<ffi.Int32> pnLog,
    ffi.Pointer<ffi.Int32> pnCkpt,
  ) {
    _sqlite3_wal_checkpoint_v2 ??= _dylib.lookupFunction<
        _c_sqlite3_wal_checkpoint_v2,
        _dart_sqlite3_wal_checkpoint_v2>('sqlite3_wal_checkpoint_v2');
    return _sqlite3_wal_checkpoint_v2(
      db,
      zDb,
      eMode,
      pnLog,
      pnCkpt,
    );
  }

  _dart_sqlite3_wal_checkpoint_v2 _sqlite3_wal_checkpoint_v2;

  int sqlite3_vtab_config(
    ffi.Pointer<sqlite3> arg0,
    int op,
  ) {
    _sqlite3_vtab_config ??= _dylib.lookupFunction<_c_sqlite3_vtab_config,
        _dart_sqlite3_vtab_config>('sqlite3_vtab_config');
    return _sqlite3_vtab_config(
      arg0,
      op,
    );
  }

  _dart_sqlite3_vtab_config _sqlite3_vtab_config;

  int sqlite3_vtab_on_conflict(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_vtab_on_conflict ??= _dylib.lookupFunction<
        _c_sqlite3_vtab_on_conflict,
        _dart_sqlite3_vtab_on_conflict>('sqlite3_vtab_on_conflict');
    return _sqlite3_vtab_on_conflict(
      arg0,
    );
  }

  _dart_sqlite3_vtab_on_conflict _sqlite3_vtab_on_conflict;

  int sqlite3_vtab_nochange(
    ffi.Pointer<sqlite3_context> arg0,
  ) {
    _sqlite3_vtab_nochange ??= _dylib.lookupFunction<_c_sqlite3_vtab_nochange,
        _dart_sqlite3_vtab_nochange>('sqlite3_vtab_nochange');
    return _sqlite3_vtab_nochange(
      arg0,
    );
  }

  _dart_sqlite3_vtab_nochange _sqlite3_vtab_nochange;

  ffi.Pointer<ffi.Int8> sqlite3_vtab_collation(
    ffi.Pointer<sqlite3_index_info> arg0,
    int arg1,
  ) {
    _sqlite3_vtab_collation ??= _dylib.lookupFunction<_c_sqlite3_vtab_collation,
        _dart_sqlite3_vtab_collation>('sqlite3_vtab_collation');
    return _sqlite3_vtab_collation(
      arg0,
      arg1,
    );
  }

  _dart_sqlite3_vtab_collation _sqlite3_vtab_collation;

  int sqlite3_stmt_scanstatus(
    ffi.Pointer<sqlite3_stmt> pStmt,
    int idx,
    int iScanStatusOp,
    ffi.Pointer<ffi.Void> pOut,
  ) {
    _sqlite3_stmt_scanstatus ??= _dylib.lookupFunction<
        _c_sqlite3_stmt_scanstatus,
        _dart_sqlite3_stmt_scanstatus>('sqlite3_stmt_scanstatus');
    return _sqlite3_stmt_scanstatus(
      pStmt,
      idx,
      iScanStatusOp,
      pOut,
    );
  }

  _dart_sqlite3_stmt_scanstatus _sqlite3_stmt_scanstatus;

  void sqlite3_stmt_scanstatus_reset(
    ffi.Pointer<sqlite3_stmt> arg0,
  ) {
    _sqlite3_stmt_scanstatus_reset ??= _dylib.lookupFunction<
        _c_sqlite3_stmt_scanstatus_reset,
        _dart_sqlite3_stmt_scanstatus_reset>('sqlite3_stmt_scanstatus_reset');
    return _sqlite3_stmt_scanstatus_reset(
      arg0,
    );
  }

  _dart_sqlite3_stmt_scanstatus_reset _sqlite3_stmt_scanstatus_reset;

  int sqlite3_db_cacheflush(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_db_cacheflush ??= _dylib.lookupFunction<_c_sqlite3_db_cacheflush,
        _dart_sqlite3_db_cacheflush>('sqlite3_db_cacheflush');
    return _sqlite3_db_cacheflush(
      arg0,
    );
  }

  _dart_sqlite3_db_cacheflush _sqlite3_db_cacheflush;

  int sqlite3_system_errno(
    ffi.Pointer<sqlite3> arg0,
  ) {
    _sqlite3_system_errno ??= _dylib.lookupFunction<_c_sqlite3_system_errno,
        _dart_sqlite3_system_errno>('sqlite3_system_errno');
    return _sqlite3_system_errno(
      arg0,
    );
  }

  _dart_sqlite3_system_errno _sqlite3_system_errno;

  int sqlite3_snapshot_get(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSchema,
    ffi.Pointer<ffi.Pointer<sqlite3_snapshot>> ppSnapshot,
  ) {
    _sqlite3_snapshot_get ??= _dylib.lookupFunction<_c_sqlite3_snapshot_get,
        _dart_sqlite3_snapshot_get>('sqlite3_snapshot_get');
    return _sqlite3_snapshot_get(
      db,
      zSchema,
      ppSnapshot,
    );
  }

  _dart_sqlite3_snapshot_get _sqlite3_snapshot_get;

  int sqlite3_snapshot_open(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSchema,
    ffi.Pointer<sqlite3_snapshot> pSnapshot,
  ) {
    _sqlite3_snapshot_open ??= _dylib.lookupFunction<_c_sqlite3_snapshot_open,
        _dart_sqlite3_snapshot_open>('sqlite3_snapshot_open');
    return _sqlite3_snapshot_open(
      db,
      zSchema,
      pSnapshot,
    );
  }

  _dart_sqlite3_snapshot_open _sqlite3_snapshot_open;

  void sqlite3_snapshot_free(
    ffi.Pointer<sqlite3_snapshot> arg0,
  ) {
    _sqlite3_snapshot_free ??= _dylib.lookupFunction<_c_sqlite3_snapshot_free,
        _dart_sqlite3_snapshot_free>('sqlite3_snapshot_free');
    return _sqlite3_snapshot_free(
      arg0,
    );
  }

  _dart_sqlite3_snapshot_free _sqlite3_snapshot_free;

  int sqlite3_snapshot_cmp(
    ffi.Pointer<sqlite3_snapshot> p1,
    ffi.Pointer<sqlite3_snapshot> p2,
  ) {
    _sqlite3_snapshot_cmp ??= _dylib.lookupFunction<_c_sqlite3_snapshot_cmp,
        _dart_sqlite3_snapshot_cmp>('sqlite3_snapshot_cmp');
    return _sqlite3_snapshot_cmp(
      p1,
      p2,
    );
  }

  _dart_sqlite3_snapshot_cmp _sqlite3_snapshot_cmp;

  int sqlite3_snapshot_recover(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zDb,
  ) {
    _sqlite3_snapshot_recover ??= _dylib.lookupFunction<
        _c_sqlite3_snapshot_recover,
        _dart_sqlite3_snapshot_recover>('sqlite3_snapshot_recover');
    return _sqlite3_snapshot_recover(
      db,
      zDb,
    );
  }

  _dart_sqlite3_snapshot_recover _sqlite3_snapshot_recover;

  ffi.Pointer<ffi.Uint8> sqlite3_serialize(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSchema,
    ffi.Pointer<ffi.Int64> piSize,
    int mFlags,
  ) {
    _sqlite3_serialize ??=
        _dylib.lookupFunction<_c_sqlite3_serialize, _dart_sqlite3_serialize>(
            'sqlite3_serialize');
    return _sqlite3_serialize(
      db,
      zSchema,
      piSize,
      mFlags,
    );
  }

  _dart_sqlite3_serialize _sqlite3_serialize;

  int sqlite3_deserialize(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zSchema,
    ffi.Pointer<ffi.Uint8> pData,
    int szDb,
    int szBuf,
    int mFlags,
  ) {
    _sqlite3_deserialize ??= _dylib.lookupFunction<_c_sqlite3_deserialize,
        _dart_sqlite3_deserialize>('sqlite3_deserialize');
    return _sqlite3_deserialize(
      db,
      zSchema,
      pData,
      szDb,
      szBuf,
      mFlags,
    );
  }

  _dart_sqlite3_deserialize _sqlite3_deserialize;

  int sqlite3_rtree_geometry_callback(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zGeom,
    ffi.Pointer<ffi.NativeFunction<_typedefC_83>> xGeom,
    ffi.Pointer<ffi.Void> pContext,
  ) {
    _sqlite3_rtree_geometry_callback ??= _dylib.lookupFunction<
            _c_sqlite3_rtree_geometry_callback,
            _dart_sqlite3_rtree_geometry_callback>(
        'sqlite3_rtree_geometry_callback');
    return _sqlite3_rtree_geometry_callback(
      db,
      zGeom,
      xGeom,
      pContext,
    );
  }

  _dart_sqlite3_rtree_geometry_callback _sqlite3_rtree_geometry_callback;

  int sqlite3_rtree_query_callback(
    ffi.Pointer<sqlite3> db,
    ffi.Pointer<ffi.Int8> zQueryFunc,
    ffi.Pointer<ffi.NativeFunction<_typedefC_84>> xQueryFunc,
    ffi.Pointer<ffi.Void> pContext,
    ffi.Pointer<ffi.NativeFunction<_typedefC_85>> xDestructor,
  ) {
    _sqlite3_rtree_query_callback ??= _dylib.lookupFunction<
        _c_sqlite3_rtree_query_callback,
        _dart_sqlite3_rtree_query_callback>('sqlite3_rtree_query_callback');
    return _sqlite3_rtree_query_callback(
      db,
      zQueryFunc,
      xQueryFunc,
      pContext,
      xDestructor,
    );
  }

  _dart_sqlite3_rtree_query_callback _sqlite3_rtree_query_callback;
}

class sqlite3 extends ffi.Struct {}

class sqlite3_file extends ffi.Struct {}

class sqlite3_io_methods extends ffi.Struct {
  @ffi.Int32()
  int iVersion;

  ffi.Pointer<ffi.NativeFunction<_typedefC_14>> xClose;

  ffi.Pointer<ffi.NativeFunction<_typedefC_15>> xRead;

  ffi.Pointer<ffi.NativeFunction<_typedefC_16>> xWrite;

  ffi.Pointer<ffi.NativeFunction<_typedefC_17>> xTruncate;

  ffi.Pointer<ffi.NativeFunction<_typedefC_18>> xSync;

  ffi.Pointer<ffi.NativeFunction<_typedefC_19>> xFileSize;

  ffi.Pointer<ffi.NativeFunction<_typedefC_20>> xLock;

  ffi.Pointer<ffi.NativeFunction<_typedefC_21>> xUnlock;

  ffi.Pointer<ffi.NativeFunction<_typedefC_22>> xCheckReservedLock;

  ffi.Pointer<ffi.NativeFunction<_typedefC_23>> xFileControl;

  ffi.Pointer<ffi.NativeFunction<_typedefC_24>> xSectorSize;

  ffi.Pointer<ffi.NativeFunction<_typedefC_25>> xDeviceCharacteristics;

  ffi.Pointer<ffi.NativeFunction<_typedefC_26>> xShmMap;

  ffi.Pointer<ffi.NativeFunction<_typedefC_27>> xShmLock;

  ffi.Pointer<ffi.NativeFunction<_typedefC_28>> xShmBarrier;

  ffi.Pointer<ffi.NativeFunction<_typedefC_29>> xShmUnmap;

  ffi.Pointer<ffi.NativeFunction<_typedefC_30>> xFetch;

  ffi.Pointer<ffi.NativeFunction<_typedefC_31>> xUnfetch;
}

class sqlite3_mutex extends ffi.Struct {}

class sqlite3_api_routines extends ffi.Struct {}

class sqlite3_vfs extends ffi.Struct {}

class sqlite3_mem_methods extends ffi.Struct {}

class sqlite3_stmt extends ffi.Struct {}

class sqlite3_value extends ffi.Struct {}

class sqlite3_context extends ffi.Struct {}

class sqlite3_vtab extends ffi.Struct {}

class sqlite3_index_info extends ffi.Struct {}

class sqlite3_vtab_cursor extends ffi.Struct {}

class sqlite3_module extends ffi.Struct {}

class sqlite3_blob extends ffi.Struct {}

class sqlite3_mutex_methods extends ffi.Struct {}

class sqlite3_str extends ffi.Struct {}

class sqlite3_pcache extends ffi.Struct {}

class sqlite3_pcache_page extends ffi.Struct {}

class sqlite3_pcache_methods2 extends ffi.Struct {}

class sqlite3_pcache_methods extends ffi.Struct {}

class sqlite3_backup extends ffi.Struct {}

class sqlite3_snapshot extends ffi.Struct {
  @ffi.Uint8()
  int _unique_hidden_item_0;
  @ffi.Uint8()
  int _unique_hidden_item_1;
  @ffi.Uint8()
  int _unique_hidden_item_2;
  @ffi.Uint8()
  int _unique_hidden_item_3;
  @ffi.Uint8()
  int _unique_hidden_item_4;
  @ffi.Uint8()
  int _unique_hidden_item_5;
  @ffi.Uint8()
  int _unique_hidden_item_6;
  @ffi.Uint8()
  int _unique_hidden_item_7;
  @ffi.Uint8()
  int _unique_hidden_item_8;
  @ffi.Uint8()
  int _unique_hidden_item_9;
  @ffi.Uint8()
  int _unique_hidden_item_10;
  @ffi.Uint8()
  int _unique_hidden_item_11;
  @ffi.Uint8()
  int _unique_hidden_item_12;
  @ffi.Uint8()
  int _unique_hidden_item_13;
  @ffi.Uint8()
  int _unique_hidden_item_14;
  @ffi.Uint8()
  int _unique_hidden_item_15;
  @ffi.Uint8()
  int _unique_hidden_item_16;
  @ffi.Uint8()
  int _unique_hidden_item_17;
  @ffi.Uint8()
  int _unique_hidden_item_18;
  @ffi.Uint8()
  int _unique_hidden_item_19;
  @ffi.Uint8()
  int _unique_hidden_item_20;
  @ffi.Uint8()
  int _unique_hidden_item_21;
  @ffi.Uint8()
  int _unique_hidden_item_22;
  @ffi.Uint8()
  int _unique_hidden_item_23;
  @ffi.Uint8()
  int _unique_hidden_item_24;
  @ffi.Uint8()
  int _unique_hidden_item_25;
  @ffi.Uint8()
  int _unique_hidden_item_26;
  @ffi.Uint8()
  int _unique_hidden_item_27;
  @ffi.Uint8()
  int _unique_hidden_item_28;
  @ffi.Uint8()
  int _unique_hidden_item_29;
  @ffi.Uint8()
  int _unique_hidden_item_30;
  @ffi.Uint8()
  int _unique_hidden_item_31;
  @ffi.Uint8()
  int _unique_hidden_item_32;
  @ffi.Uint8()
  int _unique_hidden_item_33;
  @ffi.Uint8()
  int _unique_hidden_item_34;
  @ffi.Uint8()
  int _unique_hidden_item_35;
  @ffi.Uint8()
  int _unique_hidden_item_36;
  @ffi.Uint8()
  int _unique_hidden_item_37;
  @ffi.Uint8()
  int _unique_hidden_item_38;
  @ffi.Uint8()
  int _unique_hidden_item_39;
  @ffi.Uint8()
  int _unique_hidden_item_40;
  @ffi.Uint8()
  int _unique_hidden_item_41;
  @ffi.Uint8()
  int _unique_hidden_item_42;
  @ffi.Uint8()
  int _unique_hidden_item_43;
  @ffi.Uint8()
  int _unique_hidden_item_44;
  @ffi.Uint8()
  int _unique_hidden_item_45;
  @ffi.Uint8()
  int _unique_hidden_item_46;
  @ffi.Uint8()
  int _unique_hidden_item_47;

  /// Helper for array `hidden`.
  ArrayHelper_sqlite3_snapshot_hidden_level0 get hidden =>
      ArrayHelper_sqlite3_snapshot_hidden_level0(this, [48], 0, 0);
}

/// Helper for array `hidden` in struct `sqlite3_snapshot`.
class ArrayHelper_sqlite3_snapshot_hidden_level0 {
  final sqlite3_snapshot _struct;
  final List<int> dimensions;
  final int level;
  final int _absoluteIndex;
  int get length => dimensions[level];
  ArrayHelper_sqlite3_snapshot_hidden_level0(
      this._struct, this.dimensions, this.level, this._absoluteIndex);
  void _checkBounds(int index) {
    if (index >= length || index < 0) {
      throw RangeError(
          'Dimension $level: index not in range 0..${length} exclusive.');
    }
  }

  int operator [](int index) {
    _checkBounds(index);
    switch (_absoluteIndex + index) {
      case 0:
        return _struct._unique_hidden_item_0;
      case 1:
        return _struct._unique_hidden_item_1;
      case 2:
        return _struct._unique_hidden_item_2;
      case 3:
        return _struct._unique_hidden_item_3;
      case 4:
        return _struct._unique_hidden_item_4;
      case 5:
        return _struct._unique_hidden_item_5;
      case 6:
        return _struct._unique_hidden_item_6;
      case 7:
        return _struct._unique_hidden_item_7;
      case 8:
        return _struct._unique_hidden_item_8;
      case 9:
        return _struct._unique_hidden_item_9;
      case 10:
        return _struct._unique_hidden_item_10;
      case 11:
        return _struct._unique_hidden_item_11;
      case 12:
        return _struct._unique_hidden_item_12;
      case 13:
        return _struct._unique_hidden_item_13;
      case 14:
        return _struct._unique_hidden_item_14;
      case 15:
        return _struct._unique_hidden_item_15;
      case 16:
        return _struct._unique_hidden_item_16;
      case 17:
        return _struct._unique_hidden_item_17;
      case 18:
        return _struct._unique_hidden_item_18;
      case 19:
        return _struct._unique_hidden_item_19;
      case 20:
        return _struct._unique_hidden_item_20;
      case 21:
        return _struct._unique_hidden_item_21;
      case 22:
        return _struct._unique_hidden_item_22;
      case 23:
        return _struct._unique_hidden_item_23;
      case 24:
        return _struct._unique_hidden_item_24;
      case 25:
        return _struct._unique_hidden_item_25;
      case 26:
        return _struct._unique_hidden_item_26;
      case 27:
        return _struct._unique_hidden_item_27;
      case 28:
        return _struct._unique_hidden_item_28;
      case 29:
        return _struct._unique_hidden_item_29;
      case 30:
        return _struct._unique_hidden_item_30;
      case 31:
        return _struct._unique_hidden_item_31;
      case 32:
        return _struct._unique_hidden_item_32;
      case 33:
        return _struct._unique_hidden_item_33;
      case 34:
        return _struct._unique_hidden_item_34;
      case 35:
        return _struct._unique_hidden_item_35;
      case 36:
        return _struct._unique_hidden_item_36;
      case 37:
        return _struct._unique_hidden_item_37;
      case 38:
        return _struct._unique_hidden_item_38;
      case 39:
        return _struct._unique_hidden_item_39;
      case 40:
        return _struct._unique_hidden_item_40;
      case 41:
        return _struct._unique_hidden_item_41;
      case 42:
        return _struct._unique_hidden_item_42;
      case 43:
        return _struct._unique_hidden_item_43;
      case 44:
        return _struct._unique_hidden_item_44;
      case 45:
        return _struct._unique_hidden_item_45;
      case 46:
        return _struct._unique_hidden_item_46;
      case 47:
        return _struct._unique_hidden_item_47;
      default:
        throw Exception('Invalid Array Helper generated.');
    }
  }

  void operator []=(int index, int value) {
    _checkBounds(index);
    switch (_absoluteIndex + index) {
      case 0:
        _struct._unique_hidden_item_0 = value;
        break;
      case 1:
        _struct._unique_hidden_item_1 = value;
        break;
      case 2:
        _struct._unique_hidden_item_2 = value;
        break;
      case 3:
        _struct._unique_hidden_item_3 = value;
        break;
      case 4:
        _struct._unique_hidden_item_4 = value;
        break;
      case 5:
        _struct._unique_hidden_item_5 = value;
        break;
      case 6:
        _struct._unique_hidden_item_6 = value;
        break;
      case 7:
        _struct._unique_hidden_item_7 = value;
        break;
      case 8:
        _struct._unique_hidden_item_8 = value;
        break;
      case 9:
        _struct._unique_hidden_item_9 = value;
        break;
      case 10:
        _struct._unique_hidden_item_10 = value;
        break;
      case 11:
        _struct._unique_hidden_item_11 = value;
        break;
      case 12:
        _struct._unique_hidden_item_12 = value;
        break;
      case 13:
        _struct._unique_hidden_item_13 = value;
        break;
      case 14:
        _struct._unique_hidden_item_14 = value;
        break;
      case 15:
        _struct._unique_hidden_item_15 = value;
        break;
      case 16:
        _struct._unique_hidden_item_16 = value;
        break;
      case 17:
        _struct._unique_hidden_item_17 = value;
        break;
      case 18:
        _struct._unique_hidden_item_18 = value;
        break;
      case 19:
        _struct._unique_hidden_item_19 = value;
        break;
      case 20:
        _struct._unique_hidden_item_20 = value;
        break;
      case 21:
        _struct._unique_hidden_item_21 = value;
        break;
      case 22:
        _struct._unique_hidden_item_22 = value;
        break;
      case 23:
        _struct._unique_hidden_item_23 = value;
        break;
      case 24:
        _struct._unique_hidden_item_24 = value;
        break;
      case 25:
        _struct._unique_hidden_item_25 = value;
        break;
      case 26:
        _struct._unique_hidden_item_26 = value;
        break;
      case 27:
        _struct._unique_hidden_item_27 = value;
        break;
      case 28:
        _struct._unique_hidden_item_28 = value;
        break;
      case 29:
        _struct._unique_hidden_item_29 = value;
        break;
      case 30:
        _struct._unique_hidden_item_30 = value;
        break;
      case 31:
        _struct._unique_hidden_item_31 = value;
        break;
      case 32:
        _struct._unique_hidden_item_32 = value;
        break;
      case 33:
        _struct._unique_hidden_item_33 = value;
        break;
      case 34:
        _struct._unique_hidden_item_34 = value;
        break;
      case 35:
        _struct._unique_hidden_item_35 = value;
        break;
      case 36:
        _struct._unique_hidden_item_36 = value;
        break;
      case 37:
        _struct._unique_hidden_item_37 = value;
        break;
      case 38:
        _struct._unique_hidden_item_38 = value;
        break;
      case 39:
        _struct._unique_hidden_item_39 = value;
        break;
      case 40:
        _struct._unique_hidden_item_40 = value;
        break;
      case 41:
        _struct._unique_hidden_item_41 = value;
        break;
      case 42:
        _struct._unique_hidden_item_42 = value;
        break;
      case 43:
        _struct._unique_hidden_item_43 = value;
        break;
      case 44:
        _struct._unique_hidden_item_44 = value;
        break;
      case 45:
        _struct._unique_hidden_item_45 = value;
        break;
      case 46:
        _struct._unique_hidden_item_46 = value;
        break;
      case 47:
        _struct._unique_hidden_item_47 = value;
        break;
      default:
        throw Exception('Invalid Array Helper generated.');
    }
  }
}

class sqlite3_rtree_geometry extends ffi.Struct {}

class sqlite3_rtree_query_info extends ffi.Struct {}

class Fts5ExtensionApi extends ffi.Struct {}

class Fts5Context extends ffi.Struct {}

class Fts5PhraseIter extends ffi.Struct {}

class Fts5Tokenizer extends ffi.Struct {}

class fts5_tokenizer extends ffi.Struct {}

class fts5_api extends ffi.Struct {}

typedef _c_sqlite3_libversion = ffi.Pointer<ffi.Int8> Function();

typedef _dart_sqlite3_libversion = ffi.Pointer<ffi.Int8> Function();

typedef _c_sqlite3_sourceid = ffi.Pointer<ffi.Int8> Function();

typedef _dart_sqlite3_sourceid = ffi.Pointer<ffi.Int8> Function();

typedef _c_sqlite3_libversion_number = ffi.Int32 Function();

typedef _dart_sqlite3_libversion_number = int Function();

typedef _c_sqlite3_compileoption_used = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> zOptName,
);

typedef _dart_sqlite3_compileoption_used = int Function(
  ffi.Pointer<ffi.Int8> zOptName,
);

typedef _c_sqlite3_compileoption_get = ffi.Pointer<ffi.Int8> Function(
  ffi.Int32 N,
);

typedef _dart_sqlite3_compileoption_get = ffi.Pointer<ffi.Int8> Function(
  int N,
);

typedef _c_sqlite3_threadsafe = ffi.Int32 Function();

typedef _dart_sqlite3_threadsafe = int Function();

typedef _c_sqlite3_close = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_close = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_close_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_close_v2 = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _typedefC_13 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
  ffi.Pointer<ffi.Pointer<ffi.Int8>>,
);

typedef _c_sqlite3_exec = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> sql,
  ffi.Pointer<ffi.NativeFunction<_typedefC_13>> callback,
  ffi.Pointer<ffi.Void> arg3,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> errmsg,
);

typedef _dart_sqlite3_exec = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> sql,
  ffi.Pointer<ffi.NativeFunction<_typedefC_13>> callback,
  ffi.Pointer<ffi.Void> arg3,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> errmsg,
);

typedef _c_sqlite3_initialize = ffi.Int32 Function();

typedef _dart_sqlite3_initialize = int Function();

typedef _c_sqlite3_shutdown = ffi.Int32 Function();

typedef _dart_sqlite3_shutdown = int Function();

typedef _c_sqlite3_os_init = ffi.Int32 Function();

typedef _dart_sqlite3_os_init = int Function();

typedef _c_sqlite3_os_end = ffi.Int32 Function();

typedef _dart_sqlite3_os_end = int Function();

typedef _c_sqlite3_config = ffi.Int32 Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_config = int Function(
  int arg0,
);

typedef _c_sqlite3_db_config = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 op,
);

typedef _dart_sqlite3_db_config = int Function(
  ffi.Pointer<sqlite3> arg0,
  int op,
);

typedef _c_sqlite3_extended_result_codes = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 onoff,
);

typedef _dart_sqlite3_extended_result_codes = int Function(
  ffi.Pointer<sqlite3> arg0,
  int onoff,
);

typedef _c_sqlite3_last_insert_rowid = ffi.Int64 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_last_insert_rowid = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_set_last_insert_rowid = ffi.Void Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int64 arg1,
);

typedef _dart_sqlite3_set_last_insert_rowid = void Function(
  ffi.Pointer<sqlite3> arg0,
  int arg1,
);

typedef _c_sqlite3_changes = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_changes = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_total_changes = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_total_changes = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_interrupt = ffi.Void Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_interrupt = void Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_complete = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> sql,
);

typedef _dart_sqlite3_complete = int Function(
  ffi.Pointer<ffi.Int8> sql,
);

typedef _c_sqlite3_complete16 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void> sql,
);

typedef _dart_sqlite3_complete16 = int Function(
  ffi.Pointer<ffi.Void> sql,
);

typedef _typedefC_32 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
);

typedef _c_sqlite3_busy_handler = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_32>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_busy_handler = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_32>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _c_sqlite3_busy_timeout = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 ms,
);

typedef _dart_sqlite3_busy_timeout = int Function(
  ffi.Pointer<sqlite3> arg0,
  int ms,
);

typedef _c_sqlite3_get_table = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>> pazResult,
  ffi.Pointer<ffi.Int32> pnRow,
  ffi.Pointer<ffi.Int32> pnColumn,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrmsg,
);

typedef _dart_sqlite3_get_table = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Int8>>> pazResult,
  ffi.Pointer<ffi.Int32> pnRow,
  ffi.Pointer<ffi.Int32> pnColumn,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrmsg,
);

typedef _c_sqlite3_free_table = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> result,
);

typedef _dart_sqlite3_free_table = void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> result,
);

typedef _c_sqlite3_mprintf = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_mprintf = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_snprintf = ffi.Pointer<ffi.Int8> Function(
  ffi.Int32 arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Pointer<ffi.Int8> arg2,
);

typedef _dart_sqlite3_snprintf = ffi.Pointer<ffi.Int8> Function(
  int arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Pointer<ffi.Int8> arg2,
);

typedef _c_sqlite3_malloc = ffi.Pointer<ffi.Void> Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_malloc = ffi.Pointer<ffi.Void> Function(
  int arg0,
);

typedef _c_sqlite3_malloc64 = ffi.Pointer<ffi.Void> Function(
  ffi.Uint64 arg0,
);

typedef _dart_sqlite3_malloc64 = ffi.Pointer<ffi.Void> Function(
  int arg0,
);

typedef _c_sqlite3_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_realloc = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> arg0,
  int arg1,
);

typedef _c_sqlite3_realloc64 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> arg0,
  ffi.Uint64 arg1,
);

typedef _dart_sqlite3_realloc64 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> arg0,
  int arg1,
);

typedef _c_sqlite3_free = ffi.Void Function(
  ffi.Pointer<ffi.Void> arg0,
);

typedef _dart_sqlite3_free = void Function(
  ffi.Pointer<ffi.Void> arg0,
);

typedef _c_sqlite3_msize = ffi.Uint64 Function(
  ffi.Pointer<ffi.Void> arg0,
);

typedef _dart_sqlite3_msize = int Function(
  ffi.Pointer<ffi.Void> arg0,
);

typedef _c_sqlite3_memory_used = ffi.Int64 Function();

typedef _dart_sqlite3_memory_used = int Function();

typedef _c_sqlite3_memory_highwater = ffi.Int64 Function(
  ffi.Int32 resetFlag,
);

typedef _dart_sqlite3_memory_highwater = int Function(
  int resetFlag,
);

typedef _c_sqlite3_randomness = ffi.Void Function(
  ffi.Int32 N,
  ffi.Pointer<ffi.Void> P,
);

typedef _dart_sqlite3_randomness = void Function(
  int N,
  ffi.Pointer<ffi.Void> P,
);

typedef _typedefC_33 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Int8>,
);

typedef _c_sqlite3_set_authorizer = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_33>> xAuth,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _dart_sqlite3_set_authorizer = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_33>> xAuth,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _typedefC_34 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Int8>,
);

typedef _c_sqlite3_trace = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_34>> xTrace,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_trace = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_34>> xTrace,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _typedefC_35 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Int8>,
  ffi.Uint64,
);

typedef _c_sqlite3_profile = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_35>> xProfile,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_profile = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_35>> xProfile,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _typedefC_36 = ffi.Int32 Function(
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_trace_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Uint32 uMask,
  ffi.Pointer<ffi.NativeFunction<_typedefC_36>> xCallback,
  ffi.Pointer<ffi.Void> pCtx,
);

typedef _dart_sqlite3_trace_v2 = int Function(
  ffi.Pointer<sqlite3> arg0,
  int uMask,
  ffi.Pointer<ffi.NativeFunction<_typedefC_36>> xCallback,
  ffi.Pointer<ffi.Void> pCtx,
);

typedef _typedefC_37 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_progress_handler = ffi.Void Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_37>> arg2,
  ffi.Pointer<ffi.Void> arg3,
);

typedef _dart_sqlite3_progress_handler = void Function(
  ffi.Pointer<sqlite3> arg0,
  int arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_37>> arg2,
  ffi.Pointer<ffi.Void> arg3,
);

typedef _c_sqlite3_open = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

typedef _dart_sqlite3_open = int Function(
  ffi.Pointer<ffi.Int8> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

typedef _c_sqlite3_open16 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

typedef _dart_sqlite3_open16 = int Function(
  ffi.Pointer<ffi.Void> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

typedef _c_sqlite3_open_v2 = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
  ffi.Int32 flags,
  ffi.Pointer<ffi.Int8> zVfs,
);

typedef _dart_sqlite3_open_v2 = int Function(
  ffi.Pointer<ffi.Int8> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
  int flags,
  ffi.Pointer<ffi.Int8> zVfs,
);

typedef _c_sqlite3_uri_parameter = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zFilename,
  ffi.Pointer<ffi.Int8> zParam,
);

typedef _dart_sqlite3_uri_parameter = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zFilename,
  ffi.Pointer<ffi.Int8> zParam,
);

typedef _c_sqlite3_uri_boolean = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> zFile,
  ffi.Pointer<ffi.Int8> zParam,
  ffi.Int32 bDefault,
);

typedef _dart_sqlite3_uri_boolean = int Function(
  ffi.Pointer<ffi.Int8> zFile,
  ffi.Pointer<ffi.Int8> zParam,
  int bDefault,
);

typedef _c_sqlite3_uri_int64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Int64 arg2,
);

typedef _dart_sqlite3_uri_int64 = int Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  int arg2,
);

typedef _c_sqlite3_uri_key = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zFilename,
  ffi.Int32 N,
);

typedef _dart_sqlite3_uri_key = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zFilename,
  int N,
);

typedef _c_sqlite3_filename_database = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_filename_database = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_filename_journal = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_filename_journal = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_filename_wal = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_filename_wal = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_database_file_object = ffi.Pointer<sqlite3_file> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_database_file_object = ffi.Pointer<sqlite3_file> Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_create_filename = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zDatabase,
  ffi.Pointer<ffi.Int8> zJournal,
  ffi.Pointer<ffi.Int8> zWal,
  ffi.Int32 nParam,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> azParam,
);

typedef _dart_sqlite3_create_filename = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> zDatabase,
  ffi.Pointer<ffi.Int8> zJournal,
  ffi.Pointer<ffi.Int8> zWal,
  int nParam,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> azParam,
);

typedef _c_sqlite3_free_filename = ffi.Void Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _dart_sqlite3_free_filename = void Function(
  ffi.Pointer<ffi.Int8> arg0,
);

typedef _c_sqlite3_errcode = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
);

typedef _dart_sqlite3_errcode = int Function(
  ffi.Pointer<sqlite3> db,
);

typedef _c_sqlite3_extended_errcode = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
);

typedef _dart_sqlite3_extended_errcode = int Function(
  ffi.Pointer<sqlite3> db,
);

typedef _c_sqlite3_errmsg = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_errmsg = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_errmsg16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_errmsg16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_errstr = ffi.Pointer<ffi.Int8> Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_errstr = ffi.Pointer<ffi.Int8> Function(
  int arg0,
);

typedef _c_sqlite3_limit = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 id,
  ffi.Int32 newVal,
);

typedef _dart_sqlite3_limit = int Function(
  ffi.Pointer<sqlite3> arg0,
  int id,
  int newVal,
);

typedef _c_sqlite3_prepare = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  ffi.Int32 nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _dart_sqlite3_prepare = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _c_sqlite3_prepare_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  ffi.Int32 nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _dart_sqlite3_prepare_v2 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _c_sqlite3_prepare_v3 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  ffi.Int32 nByte,
  ffi.Uint32 prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _dart_sqlite3_prepare_v3 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSql,
  int nByte,
  int prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzTail,
);

typedef _c_sqlite3_prepare16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  ffi.Int32 nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _dart_sqlite3_prepare16 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _c_sqlite3_prepare16_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  ffi.Int32 nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _dart_sqlite3_prepare16_v2 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _c_sqlite3_prepare16_v3 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  ffi.Int32 nByte,
  ffi.Uint32 prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _dart_sqlite3_prepare16_v3 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  int prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

typedef _c_sqlite3_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_expanded_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_expanded_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_normalized_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_normalized_sql = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_stmt_readonly = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_stmt_readonly = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_stmt_isexplain = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_stmt_isexplain = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_stmt_busy = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_stmt_busy = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _typedefC_38 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_blob = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Int32 n,
  ffi.Pointer<ffi.NativeFunction<_typedefC_38>> arg4,
);

typedef _dart_sqlite3_bind_blob = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int n,
  ffi.Pointer<ffi.NativeFunction<_typedefC_38>> arg4,
);

typedef _typedefC_39 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_blob64 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Uint64 arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_39>> arg4,
);

typedef _dart_sqlite3_bind_blob64 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_39>> arg4,
);

typedef _c_sqlite3_bind_double = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Double arg2,
);

typedef _dart_sqlite3_bind_double = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  double arg2,
);

typedef _c_sqlite3_bind_int = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Int32 arg2,
);

typedef _dart_sqlite3_bind_int = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

typedef _c_sqlite3_bind_int64 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Int64 arg2,
);

typedef _dart_sqlite3_bind_int64 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

typedef _c_sqlite3_bind_null = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_bind_null = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _typedefC_40 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_text = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Int8> arg2,
  ffi.Int32 arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_40>> arg4,
);

typedef _dart_sqlite3_bind_text = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Int8> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_40>> arg4,
);

typedef _typedefC_41 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_text16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Int32 arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_41>> arg4,
);

typedef _dart_sqlite3_bind_text16 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_41>> arg4,
);

typedef _typedefC_42 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_text64 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Int8> arg2,
  ffi.Uint64 arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_42>> arg4,
  ffi.Uint8 encoding,
);

typedef _dart_sqlite3_bind_text64 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Int8> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_42>> arg4,
  int encoding,
);

typedef _c_sqlite3_bind_value = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<sqlite3_value> arg2,
);

typedef _dart_sqlite3_bind_value = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<sqlite3_value> arg2,
);

typedef _typedefC_43 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_bind_pointer = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.Int8> arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_43>> arg4,
);

typedef _dart_sqlite3_bind_pointer = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.Int8> arg3,
  ffi.Pointer<ffi.NativeFunction<_typedefC_43>> arg4,
);

typedef _c_sqlite3_bind_zeroblob = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Int32 n,
);

typedef _dart_sqlite3_bind_zeroblob = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int n,
);

typedef _c_sqlite3_bind_zeroblob64 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
  ffi.Uint64 arg2,
);

typedef _dart_sqlite3_bind_zeroblob64 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

typedef _c_sqlite3_bind_parameter_count = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_bind_parameter_count = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_bind_parameter_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_bind_parameter_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_bind_parameter_index = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<ffi.Int8> zName,
);

typedef _dart_sqlite3_bind_parameter_index = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<ffi.Int8> zName,
);

typedef _c_sqlite3_clear_bindings = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_clear_bindings = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_column_count = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_column_count = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_column_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 N,
);

typedef _dart_sqlite3_column_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int N,
);

typedef _c_sqlite3_column_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 N,
);

typedef _dart_sqlite3_column_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int N,
);

typedef _c_sqlite3_column_database_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_database_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_database_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_database_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_table_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_table_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_table_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_table_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_origin_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_origin_name = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_origin_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_origin_name16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_decltype = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_decltype = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_column_decltype16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_column_decltype16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

typedef _c_sqlite3_step = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_step = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_data_count = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_data_count = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_column_blob = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_blob = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_double = ffi.Double Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_double = double Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_int = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_int = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_int64 = ffi.Int64 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_int64 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_text = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_text = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_text16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_text16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_value = ffi.Pointer<sqlite3_value> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_value = ffi.Pointer<sqlite3_value> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_bytes = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_bytes = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_bytes16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_bytes16 = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_column_type = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 iCol,
);

typedef _dart_sqlite3_column_type = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

typedef _c_sqlite3_finalize = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_finalize = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _c_sqlite3_reset = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_reset = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _typedefC_44 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_45 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_46 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
);

typedef _c_sqlite3_create_function = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  ffi.Int32 nArg,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_44>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_45>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_46>> xFinal,
);

typedef _dart_sqlite3_create_function = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_44>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_45>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_46>> xFinal,
);

typedef _typedefC_47 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_48 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_49 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
);

typedef _c_sqlite3_create_function16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zFunctionName,
  ffi.Int32 nArg,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_47>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_48>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_49>> xFinal,
);

typedef _dart_sqlite3_create_function16 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_47>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_48>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_49>> xFinal,
);

typedef _typedefC_50 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_51 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_52 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
);

typedef _typedefC_53 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_function_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  ffi.Int32 nArg,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_50>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_51>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_52>> xFinal,
  ffi.Pointer<ffi.NativeFunction<_typedefC_53>> xDestroy,
);

typedef _dart_sqlite3_create_function_v2 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_50>> xFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_51>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_52>> xFinal,
  ffi.Pointer<ffi.NativeFunction<_typedefC_53>> xDestroy,
);

typedef _typedefC_54 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_55 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
);

typedef _typedefC_56 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
);

typedef _typedefC_57 = ffi.Void Function(
  ffi.Pointer<sqlite3_context>,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<sqlite3_value>>,
);

typedef _typedefC_58 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_window_function = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  ffi.Int32 nArg,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_54>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_55>> xFinal,
  ffi.Pointer<ffi.NativeFunction<_typedefC_56>> xValue,
  ffi.Pointer<ffi.NativeFunction<_typedefC_57>> xInverse,
  ffi.Pointer<ffi.NativeFunction<_typedefC_58>> xDestroy,
);

typedef _dart_sqlite3_create_window_function = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<ffi.NativeFunction<_typedefC_54>> xStep,
  ffi.Pointer<ffi.NativeFunction<_typedefC_55>> xFinal,
  ffi.Pointer<ffi.NativeFunction<_typedefC_56>> xValue,
  ffi.Pointer<ffi.NativeFunction<_typedefC_57>> xInverse,
  ffi.Pointer<ffi.NativeFunction<_typedefC_58>> xDestroy,
);

typedef _c_sqlite3_aggregate_count = ffi.Int32 Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_aggregate_count = int Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_expired = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_expired = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_transfer_bindings = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<sqlite3_stmt> arg1,
);

typedef _dart_sqlite3_transfer_bindings = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<sqlite3_stmt> arg1,
);

typedef _c_sqlite3_global_recover = ffi.Int32 Function();

typedef _dart_sqlite3_global_recover = int Function();

typedef _c_sqlite3_thread_cleanup = ffi.Void Function();

typedef _dart_sqlite3_thread_cleanup = void Function();

typedef _typedefC_59 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int64,
  ffi.Int32,
);

typedef _c_sqlite3_memory_alarm = ffi.Int32 Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_59>> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int64 arg2,
);

typedef _dart_sqlite3_memory_alarm = int Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_59>> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
);

typedef _c_sqlite3_value_blob = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_blob = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_double = ffi.Double Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_double = double Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_int = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_int = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_int64 = ffi.Int64 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_int64 = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_pointer = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
  ffi.Pointer<ffi.Int8> arg1,
);

typedef _dart_sqlite3_value_pointer = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
  ffi.Pointer<ffi.Int8> arg1,
);

typedef _c_sqlite3_value_text = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_text = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_text16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_text16 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_text16le = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_text16le = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_text16be = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_text16be = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_bytes = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_bytes = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_bytes16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_bytes16 = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_type = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_type = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_numeric_type = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_numeric_type = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_nochange = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_nochange = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_frombind = ffi.Int32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_frombind = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_subtype = ffi.Uint32 Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_subtype = int Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_dup = ffi.Pointer<sqlite3_value> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_dup = ffi.Pointer<sqlite3_value> Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_value_free = ffi.Void Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _dart_sqlite3_value_free = void Function(
  ffi.Pointer<sqlite3_value> arg0,
);

typedef _c_sqlite3_aggregate_context = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 nBytes,
);

typedef _dart_sqlite3_aggregate_context = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
  int nBytes,
);

typedef _c_sqlite3_user_data = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_user_data = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_context_db_handle = ffi.Pointer<sqlite3> Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_context_db_handle = ffi.Pointer<sqlite3> Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_get_auxdata = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 N,
);

typedef _dart_sqlite3_get_auxdata = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3_context> arg0,
  int N,
);

typedef _typedefC_60 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_set_auxdata = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 N,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_60>> arg3,
);

typedef _dart_sqlite3_set_auxdata = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int N,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_60>> arg3,
);

typedef _typedefC_61 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_blob = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int32 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_61>> arg3,
);

typedef _dart_sqlite3_result_blob = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_61>> arg3,
);

typedef _typedefC_62 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_blob64 = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Uint64 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_62>> arg3,
);

typedef _dart_sqlite3_result_blob64 = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_62>> arg3,
);

typedef _c_sqlite3_result_double = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Double arg1,
);

typedef _dart_sqlite3_result_double = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  double arg1,
);

typedef _c_sqlite3_result_error = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Int32 arg2,
);

typedef _dart_sqlite3_result_error = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  int arg2,
);

typedef _c_sqlite3_result_error16 = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int32 arg2,
);

typedef _dart_sqlite3_result_error16 = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
);

typedef _c_sqlite3_result_error_toobig = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_result_error_toobig = void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_result_error_nomem = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_result_error_nomem = void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_result_error_code = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_result_error_code = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

typedef _c_sqlite3_result_int = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_result_int = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

typedef _c_sqlite3_result_int64 = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int64 arg1,
);

typedef _dart_sqlite3_result_int64 = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

typedef _c_sqlite3_result_null = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_result_null = void Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _typedefC_63 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_text = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Int32 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_63>> arg3,
);

typedef _dart_sqlite3_result_text = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_63>> arg3,
);

typedef _typedefC_64 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_text64 = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Uint64 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_64>> arg3,
  ffi.Uint8 encoding,
);

typedef _dart_sqlite3_result_text64 = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_64>> arg3,
  int encoding,
);

typedef _typedefC_65 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_text16 = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int32 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_65>> arg3,
);

typedef _dart_sqlite3_result_text16 = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_65>> arg3,
);

typedef _typedefC_66 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_text16le = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int32 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_66>> arg3,
);

typedef _dart_sqlite3_result_text16le = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_66>> arg3,
);

typedef _typedefC_67 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_text16be = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Int32 arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_67>> arg3,
);

typedef _dart_sqlite3_result_text16be = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_67>> arg3,
);

typedef _c_sqlite3_result_value = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<sqlite3_value> arg1,
);

typedef _dart_sqlite3_result_value = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<sqlite3_value> arg1,
);

typedef _typedefC_68 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_result_pointer = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.Int8> arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_68>> arg3,
);

typedef _dart_sqlite3_result_pointer = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.Int8> arg2,
  ffi.Pointer<ffi.NativeFunction<_typedefC_68>> arg3,
);

typedef _c_sqlite3_result_zeroblob = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Int32 n,
);

typedef _dart_sqlite3_result_zeroblob = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int n,
);

typedef _c_sqlite3_result_zeroblob64 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Uint64 n,
);

typedef _dart_sqlite3_result_zeroblob64 = int Function(
  ffi.Pointer<sqlite3_context> arg0,
  int n,
);

typedef _c_sqlite3_result_subtype = ffi.Void Function(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Uint32 arg1,
);

typedef _dart_sqlite3_result_subtype = void Function(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

typedef _typedefC_69 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_collation = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_69>> xCompare,
);

typedef _dart_sqlite3_create_collation = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_69>> xCompare,
);

typedef _typedefC_70 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_71 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_collation_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_70>> xCompare,
  ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xDestroy,
);

typedef _dart_sqlite3_create_collation_v2 = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_70>> xCompare,
  ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xDestroy,
);

typedef _typedefC_72 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_collation16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> zName,
  ffi.Int32 eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xCompare,
);

typedef _dart_sqlite3_create_collation16 = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xCompare,
);

typedef _typedefC_73 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<sqlite3>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
);

typedef _c_sqlite3_collation_needed = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_73>> arg2,
);

typedef _dart_sqlite3_collation_needed = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_73>> arg2,
);

typedef _typedefC_74 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<sqlite3>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_collation_needed16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_74>> arg2,
);

typedef _dart_sqlite3_collation_needed16 = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.NativeFunction<_typedefC_74>> arg2,
);

typedef _c_sqlite3_sleep = ffi.Int32 Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_sleep = int Function(
  int arg0,
);

typedef _c_sqlite3_win32_set_directory = ffi.Int32 Function(
  ffi.Uint64 type,
  ffi.Pointer<ffi.Void> zValue,
);

typedef _dart_sqlite3_win32_set_directory = int Function(
  int type,
  ffi.Pointer<ffi.Void> zValue,
);

typedef _c_sqlite3_win32_set_directory8 = ffi.Int32 Function(
  ffi.Uint64 type,
  ffi.Pointer<ffi.Int8> zValue,
);

typedef _dart_sqlite3_win32_set_directory8 = int Function(
  int type,
  ffi.Pointer<ffi.Int8> zValue,
);

typedef _c_sqlite3_win32_set_directory16 = ffi.Int32 Function(
  ffi.Uint64 type,
  ffi.Pointer<ffi.Void> zValue,
);

typedef _dart_sqlite3_win32_set_directory16 = int Function(
  int type,
  ffi.Pointer<ffi.Void> zValue,
);

typedef _c_sqlite3_get_autocommit = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_get_autocommit = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_db_handle = ffi.Pointer<sqlite3> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_db_handle = ffi.Pointer<sqlite3> Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_db_filename = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
);

typedef _dart_sqlite3_db_filename = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
);

typedef _c_sqlite3_db_readonly = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
);

typedef _dart_sqlite3_db_readonly = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
);

typedef _c_sqlite3_next_stmt = ffi.Pointer<sqlite3_stmt> Function(
  ffi.Pointer<sqlite3> pDb,
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _dart_sqlite3_next_stmt = ffi.Pointer<sqlite3_stmt> Function(
  ffi.Pointer<sqlite3> pDb,
  ffi.Pointer<sqlite3_stmt> pStmt,
);

typedef _typedefC_75 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_commit_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_75>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_commit_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_75>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _typedefC_76 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_rollback_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_76>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_rollback_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_76>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _typedefC_77 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int64,
);

typedef _c_sqlite3_update_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_77>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_update_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_77>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _c_sqlite3_enable_shared_cache = ffi.Int32 Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_enable_shared_cache = int Function(
  int arg0,
);

typedef _c_sqlite3_release_memory = ffi.Int32 Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_release_memory = int Function(
  int arg0,
);

typedef _c_sqlite3_db_release_memory = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_db_release_memory = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_soft_heap_limit64 = ffi.Int64 Function(
  ffi.Int64 N,
);

typedef _dart_sqlite3_soft_heap_limit64 = int Function(
  int N,
);

typedef _c_sqlite3_hard_heap_limit64 = ffi.Int64 Function(
  ffi.Int64 N,
);

typedef _dart_sqlite3_hard_heap_limit64 = int Function(
  int N,
);

typedef _c_sqlite3_soft_heap_limit = ffi.Void Function(
  ffi.Int32 N,
);

typedef _dart_sqlite3_soft_heap_limit = void Function(
  int N,
);

typedef _c_sqlite3_table_column_metadata = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
  ffi.Pointer<ffi.Int8> zTableName,
  ffi.Pointer<ffi.Int8> zColumnName,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzDataType,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzCollSeq,
  ffi.Pointer<ffi.Int32> pNotNull,
  ffi.Pointer<ffi.Int32> pPrimaryKey,
  ffi.Pointer<ffi.Int32> pAutoinc,
);

typedef _dart_sqlite3_table_column_metadata = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDbName,
  ffi.Pointer<ffi.Int8> zTableName,
  ffi.Pointer<ffi.Int8> zColumnName,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzDataType,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzCollSeq,
  ffi.Pointer<ffi.Int32> pNotNull,
  ffi.Pointer<ffi.Int32> pPrimaryKey,
  ffi.Pointer<ffi.Int32> pAutoinc,
);

typedef _c_sqlite3_load_extension = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFile,
  ffi.Pointer<ffi.Int8> zProc,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrMsg,
);

typedef _dart_sqlite3_load_extension = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zFile,
  ffi.Pointer<ffi.Int8> zProc,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> pzErrMsg,
);

typedef _c_sqlite3_enable_load_extension = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Int32 onoff,
);

typedef _dart_sqlite3_enable_load_extension = int Function(
  ffi.Pointer<sqlite3> db,
  int onoff,
);

typedef _typedefC_78 = ffi.Void Function();

typedef _c_sqlite3_auto_extension = ffi.Int32 Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_78>> xEntryPoint,
);

typedef _dart_sqlite3_auto_extension = int Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_78>> xEntryPoint,
);

typedef _typedefC_79 = ffi.Void Function();

typedef _c_sqlite3_cancel_auto_extension = ffi.Int32 Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_79>> xEntryPoint,
);

typedef _dart_sqlite3_cancel_auto_extension = int Function(
  ffi.Pointer<ffi.NativeFunction<_typedefC_79>> xEntryPoint,
);

typedef _c_sqlite3_reset_auto_extension = ffi.Void Function();

typedef _dart_sqlite3_reset_auto_extension = void Function();

typedef _c_sqlite3_create_module = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
);

typedef _dart_sqlite3_create_module = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
);

typedef _typedefC_80 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_create_module_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
  ffi.Pointer<ffi.NativeFunction<_typedefC_80>> xDestroy,
);

typedef _dart_sqlite3_create_module_v2 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
  ffi.Pointer<ffi.NativeFunction<_typedefC_80>> xDestroy,
);

typedef _c_sqlite3_drop_modules = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> azKeep,
);

typedef _dart_sqlite3_drop_modules = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> azKeep,
);

typedef _c_sqlite3_declare_vtab = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zSQL,
);

typedef _dart_sqlite3_declare_vtab = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zSQL,
);

typedef _c_sqlite3_overload_function = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zFuncName,
  ffi.Int32 nArg,
);

typedef _dart_sqlite3_overload_function = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zFuncName,
  int nArg,
);

typedef _c_sqlite3_blob_open = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zDb,
  ffi.Pointer<ffi.Int8> zTable,
  ffi.Pointer<ffi.Int8> zColumn,
  ffi.Int64 iRow,
  ffi.Int32 flags,
  ffi.Pointer<ffi.Pointer<sqlite3_blob>> ppBlob,
);

typedef _dart_sqlite3_blob_open = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zDb,
  ffi.Pointer<ffi.Int8> zTable,
  ffi.Pointer<ffi.Int8> zColumn,
  int iRow,
  int flags,
  ffi.Pointer<ffi.Pointer<sqlite3_blob>> ppBlob,
);

typedef _c_sqlite3_blob_reopen = ffi.Int32 Function(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Int64 arg1,
);

typedef _dart_sqlite3_blob_reopen = int Function(
  ffi.Pointer<sqlite3_blob> arg0,
  int arg1,
);

typedef _c_sqlite3_blob_close = ffi.Int32 Function(
  ffi.Pointer<sqlite3_blob> arg0,
);

typedef _dart_sqlite3_blob_close = int Function(
  ffi.Pointer<sqlite3_blob> arg0,
);

typedef _c_sqlite3_blob_bytes = ffi.Int32 Function(
  ffi.Pointer<sqlite3_blob> arg0,
);

typedef _dart_sqlite3_blob_bytes = int Function(
  ffi.Pointer<sqlite3_blob> arg0,
);

typedef _c_sqlite3_blob_read = ffi.Int32 Function(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> Z,
  ffi.Int32 N,
  ffi.Int32 iOffset,
);

typedef _dart_sqlite3_blob_read = int Function(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> Z,
  int N,
  int iOffset,
);

typedef _c_sqlite3_blob_write = ffi.Int32 Function(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> z,
  ffi.Int32 n,
  ffi.Int32 iOffset,
);

typedef _dart_sqlite3_blob_write = int Function(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> z,
  int n,
  int iOffset,
);

typedef _c_sqlite3_vfs_find = ffi.Pointer<sqlite3_vfs> Function(
  ffi.Pointer<ffi.Int8> zVfsName,
);

typedef _dart_sqlite3_vfs_find = ffi.Pointer<sqlite3_vfs> Function(
  ffi.Pointer<ffi.Int8> zVfsName,
);

typedef _c_sqlite3_vfs_register = ffi.Int32 Function(
  ffi.Pointer<sqlite3_vfs> arg0,
  ffi.Int32 makeDflt,
);

typedef _dart_sqlite3_vfs_register = int Function(
  ffi.Pointer<sqlite3_vfs> arg0,
  int makeDflt,
);

typedef _c_sqlite3_vfs_unregister = ffi.Int32 Function(
  ffi.Pointer<sqlite3_vfs> arg0,
);

typedef _dart_sqlite3_vfs_unregister = int Function(
  ffi.Pointer<sqlite3_vfs> arg0,
);

typedef _c_sqlite3_mutex_alloc = ffi.Pointer<sqlite3_mutex> Function(
  ffi.Int32 arg0,
);

typedef _dart_sqlite3_mutex_alloc = ffi.Pointer<sqlite3_mutex> Function(
  int arg0,
);

typedef _c_sqlite3_mutex_free = ffi.Void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_free = void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_mutex_enter = ffi.Void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_enter = void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_mutex_try = ffi.Int32 Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_try = int Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_mutex_leave = ffi.Void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_leave = void Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_mutex_held = ffi.Int32 Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_held = int Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_mutex_notheld = ffi.Int32 Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _dart_sqlite3_mutex_notheld = int Function(
  ffi.Pointer<sqlite3_mutex> arg0,
);

typedef _c_sqlite3_db_mutex = ffi.Pointer<sqlite3_mutex> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_db_mutex = ffi.Pointer<sqlite3_mutex> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_file_control = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zDbName,
  ffi.Int32 op,
  ffi.Pointer<ffi.Void> arg3,
);

typedef _dart_sqlite3_file_control = int Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Int8> zDbName,
  int op,
  ffi.Pointer<ffi.Void> arg3,
);

typedef _c_sqlite3_test_control = ffi.Int32 Function(
  ffi.Int32 op,
);

typedef _dart_sqlite3_test_control = int Function(
  int op,
);

typedef _c_sqlite3_keyword_count = ffi.Int32 Function();

typedef _dart_sqlite3_keyword_count = int Function();

typedef _c_sqlite3_keyword_name = ffi.Int32 Function(
  ffi.Int32 arg0,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg1,
  ffi.Pointer<ffi.Int32> arg2,
);

typedef _dart_sqlite3_keyword_name = int Function(
  int arg0,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg1,
  ffi.Pointer<ffi.Int32> arg2,
);

typedef _c_sqlite3_keyword_check = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_keyword_check = int Function(
  ffi.Pointer<ffi.Int8> arg0,
  int arg1,
);

typedef _c_sqlite3_str_new = ffi.Pointer<sqlite3_str> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_str_new = ffi.Pointer<sqlite3_str> Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_str_finish = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _dart_sqlite3_str_finish = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _c_sqlite3_str_appendf = ffi.Void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _dart_sqlite3_str_appendf = void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _c_sqlite3_str_append = ffi.Void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zIn,
  ffi.Int32 N,
);

typedef _dart_sqlite3_str_append = void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zIn,
  int N,
);

typedef _c_sqlite3_str_appendall = ffi.Void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zIn,
);

typedef _dart_sqlite3_str_appendall = void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Int8> zIn,
);

typedef _c_sqlite3_str_appendchar = ffi.Void Function(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Int32 N,
  ffi.Int8 C,
);

typedef _dart_sqlite3_str_appendchar = void Function(
  ffi.Pointer<sqlite3_str> arg0,
  int N,
  int C,
);

typedef _c_sqlite3_str_reset = ffi.Void Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _dart_sqlite3_str_reset = void Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _c_sqlite3_str_errcode = ffi.Int32 Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _dart_sqlite3_str_errcode = int Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _c_sqlite3_str_length = ffi.Int32 Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _dart_sqlite3_str_length = int Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _c_sqlite3_str_value = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _dart_sqlite3_str_value = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_str> arg0,
);

typedef _c_sqlite3_status = ffi.Int32 Function(
  ffi.Int32 op,
  ffi.Pointer<ffi.Int32> pCurrent,
  ffi.Pointer<ffi.Int32> pHighwater,
  ffi.Int32 resetFlag,
);

typedef _dart_sqlite3_status = int Function(
  int op,
  ffi.Pointer<ffi.Int32> pCurrent,
  ffi.Pointer<ffi.Int32> pHighwater,
  int resetFlag,
);

typedef _c_sqlite3_status64 = ffi.Int32 Function(
  ffi.Int32 op,
  ffi.Pointer<ffi.Int64> pCurrent,
  ffi.Pointer<ffi.Int64> pHighwater,
  ffi.Int32 resetFlag,
);

typedef _dart_sqlite3_status64 = int Function(
  int op,
  ffi.Pointer<ffi.Int64> pCurrent,
  ffi.Pointer<ffi.Int64> pHighwater,
  int resetFlag,
);

typedef _c_sqlite3_db_status = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 op,
  ffi.Pointer<ffi.Int32> pCur,
  ffi.Pointer<ffi.Int32> pHiwtr,
  ffi.Int32 resetFlg,
);

typedef _dart_sqlite3_db_status = int Function(
  ffi.Pointer<sqlite3> arg0,
  int op,
  ffi.Pointer<ffi.Int32> pCur,
  ffi.Pointer<ffi.Int32> pHiwtr,
  int resetFlg,
);

typedef _c_sqlite3_stmt_status = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Int32 op,
  ffi.Int32 resetFlg,
);

typedef _dart_sqlite3_stmt_status = int Function(
  ffi.Pointer<sqlite3_stmt> arg0,
  int op,
  int resetFlg,
);

typedef _c_sqlite3_backup_init = ffi.Pointer<sqlite3_backup> Function(
  ffi.Pointer<sqlite3> pDest,
  ffi.Pointer<ffi.Int8> zDestName,
  ffi.Pointer<sqlite3> pSource,
  ffi.Pointer<ffi.Int8> zSourceName,
);

typedef _dart_sqlite3_backup_init = ffi.Pointer<sqlite3_backup> Function(
  ffi.Pointer<sqlite3> pDest,
  ffi.Pointer<ffi.Int8> zDestName,
  ffi.Pointer<sqlite3> pSource,
  ffi.Pointer<ffi.Int8> zSourceName,
);

typedef _c_sqlite3_backup_step = ffi.Int32 Function(
  ffi.Pointer<sqlite3_backup> p,
  ffi.Int32 nPage,
);

typedef _dart_sqlite3_backup_step = int Function(
  ffi.Pointer<sqlite3_backup> p,
  int nPage,
);

typedef _c_sqlite3_backup_finish = ffi.Int32 Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _dart_sqlite3_backup_finish = int Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _c_sqlite3_backup_remaining = ffi.Int32 Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _dart_sqlite3_backup_remaining = int Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _c_sqlite3_backup_pagecount = ffi.Int32 Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _dart_sqlite3_backup_pagecount = int Function(
  ffi.Pointer<sqlite3_backup> p,
);

typedef _typedefC_81 = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<ffi.Void>>,
  ffi.Int32,
);

typedef _c_sqlite3_unlock_notify = ffi.Int32 Function(
  ffi.Pointer<sqlite3> pBlocked,
  ffi.Pointer<ffi.NativeFunction<_typedefC_81>> xNotify,
  ffi.Pointer<ffi.Void> pNotifyArg,
);

typedef _dart_sqlite3_unlock_notify = int Function(
  ffi.Pointer<sqlite3> pBlocked,
  ffi.Pointer<ffi.NativeFunction<_typedefC_81>> xNotify,
  ffi.Pointer<ffi.Void> pNotifyArg,
);

typedef _c_sqlite3_stricmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
);

typedef _dart_sqlite3_stricmp = int Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
);

typedef _c_sqlite3_strnicmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  ffi.Int32 arg2,
);

typedef _dart_sqlite3_strnicmp = int Function(
  ffi.Pointer<ffi.Int8> arg0,
  ffi.Pointer<ffi.Int8> arg1,
  int arg2,
);

typedef _c_sqlite3_strglob = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> zGlob,
  ffi.Pointer<ffi.Int8> zStr,
);

typedef _dart_sqlite3_strglob = int Function(
  ffi.Pointer<ffi.Int8> zGlob,
  ffi.Pointer<ffi.Int8> zStr,
);

typedef _c_sqlite3_strlike = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> zGlob,
  ffi.Pointer<ffi.Int8> zStr,
  ffi.Uint32 cEsc,
);

typedef _dart_sqlite3_strlike = int Function(
  ffi.Pointer<ffi.Int8> zGlob,
  ffi.Pointer<ffi.Int8> zStr,
  int cEsc,
);

typedef _c_sqlite3_log = ffi.Void Function(
  ffi.Int32 iErrCode,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _dart_sqlite3_log = void Function(
  int iErrCode,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _typedefC_82 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<sqlite3>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int32,
);

typedef _c_sqlite3_wal_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_82>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _dart_sqlite3_wal_hook = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<_typedefC_82>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

typedef _c_sqlite3_wal_autocheckpoint = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Int32 N,
);

typedef _dart_sqlite3_wal_autocheckpoint = int Function(
  ffi.Pointer<sqlite3> db,
  int N,
);

typedef _c_sqlite3_wal_checkpoint = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
);

typedef _dart_sqlite3_wal_checkpoint = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
);

typedef _c_sqlite3_wal_checkpoint_v2 = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
  ffi.Int32 eMode,
  ffi.Pointer<ffi.Int32> pnLog,
  ffi.Pointer<ffi.Int32> pnCkpt,
);

typedef _dart_sqlite3_wal_checkpoint_v2 = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
  int eMode,
  ffi.Pointer<ffi.Int32> pnLog,
  ffi.Pointer<ffi.Int32> pnCkpt,
);

typedef _c_sqlite3_vtab_config = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Int32 op,
);

typedef _dart_sqlite3_vtab_config = int Function(
  ffi.Pointer<sqlite3> arg0,
  int op,
);

typedef _c_sqlite3_vtab_on_conflict = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_vtab_on_conflict = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_vtab_nochange = ffi.Int32 Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _dart_sqlite3_vtab_nochange = int Function(
  ffi.Pointer<sqlite3_context> arg0,
);

typedef _c_sqlite3_vtab_collation = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_index_info> arg0,
  ffi.Int32 arg1,
);

typedef _dart_sqlite3_vtab_collation = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<sqlite3_index_info> arg0,
  int arg1,
);

typedef _c_sqlite3_stmt_scanstatus = ffi.Int32 Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
  ffi.Int32 idx,
  ffi.Int32 iScanStatusOp,
  ffi.Pointer<ffi.Void> pOut,
);

typedef _dart_sqlite3_stmt_scanstatus = int Function(
  ffi.Pointer<sqlite3_stmt> pStmt,
  int idx,
  int iScanStatusOp,
  ffi.Pointer<ffi.Void> pOut,
);

typedef _c_sqlite3_stmt_scanstatus_reset = ffi.Void Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _dart_sqlite3_stmt_scanstatus_reset = void Function(
  ffi.Pointer<sqlite3_stmt> arg0,
);

typedef _c_sqlite3_db_cacheflush = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_db_cacheflush = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_system_errno = ffi.Int32 Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _dart_sqlite3_system_errno = int Function(
  ffi.Pointer<sqlite3> arg0,
);

typedef _c_sqlite3_snapshot_get = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Pointer<sqlite3_snapshot>> ppSnapshot,
);

typedef _dart_sqlite3_snapshot_get = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Pointer<sqlite3_snapshot>> ppSnapshot,
);

typedef _c_sqlite3_snapshot_open = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<sqlite3_snapshot> pSnapshot,
);

typedef _dart_sqlite3_snapshot_open = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<sqlite3_snapshot> pSnapshot,
);

typedef _c_sqlite3_snapshot_free = ffi.Void Function(
  ffi.Pointer<sqlite3_snapshot> arg0,
);

typedef _dart_sqlite3_snapshot_free = void Function(
  ffi.Pointer<sqlite3_snapshot> arg0,
);

typedef _c_sqlite3_snapshot_cmp = ffi.Int32 Function(
  ffi.Pointer<sqlite3_snapshot> p1,
  ffi.Pointer<sqlite3_snapshot> p2,
);

typedef _dart_sqlite3_snapshot_cmp = int Function(
  ffi.Pointer<sqlite3_snapshot> p1,
  ffi.Pointer<sqlite3_snapshot> p2,
);

typedef _c_sqlite3_snapshot_recover = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
);

typedef _dart_sqlite3_snapshot_recover = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zDb,
);

typedef _c_sqlite3_serialize = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Int64> piSize,
  ffi.Uint32 mFlags,
);

typedef _dart_sqlite3_serialize = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Int64> piSize,
  int mFlags,
);

typedef _c_sqlite3_deserialize = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Uint8> pData,
  ffi.Int64 szDb,
  ffi.Int64 szBuf,
  ffi.Uint32 mFlags,
);

typedef _dart_sqlite3_deserialize = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zSchema,
  ffi.Pointer<ffi.Uint8> pData,
  int szDb,
  int szBuf,
  int mFlags,
);

typedef _typedefC_83 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_rtree_geometry>,
  ffi.Int32,
  ffi.Pointer<ffi.Double>,
  ffi.Pointer<ffi.Int32>,
);

typedef _c_sqlite3_rtree_geometry_callback = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zGeom,
  ffi.Pointer<ffi.NativeFunction<_typedefC_83>> xGeom,
  ffi.Pointer<ffi.Void> pContext,
);

typedef _dart_sqlite3_rtree_geometry_callback = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zGeom,
  ffi.Pointer<ffi.NativeFunction<_typedefC_83>> xGeom,
  ffi.Pointer<ffi.Void> pContext,
);

typedef _typedefC_84 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_rtree_query_info>,
);

typedef _typedefC_85 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _c_sqlite3_rtree_query_callback = ffi.Int32 Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zQueryFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_84>> xQueryFunc,
  ffi.Pointer<ffi.Void> pContext,
  ffi.Pointer<ffi.NativeFunction<_typedefC_85>> xDestructor,
);

typedef _dart_sqlite3_rtree_query_callback = int Function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Int8> zQueryFunc,
  ffi.Pointer<ffi.NativeFunction<_typedefC_84>> xQueryFunc,
  ffi.Pointer<ffi.Void> pContext,
  ffi.Pointer<ffi.NativeFunction<_typedefC_85>> xDestructor,
);

typedef _typedefC_14 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
);

typedef _typedefC_15 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Int64,
);

typedef _typedefC_16 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Int64,
);

typedef _typedefC_17 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int64,
);

typedef _typedefC_18 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
);

typedef _typedefC_19 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Pointer<ffi.Int64>,
);

typedef _typedefC_20 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
);

typedef _typedefC_21 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
);

typedef _typedefC_22 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Pointer<ffi.Int32>,
);

typedef _typedefC_23 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_24 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
);

typedef _typedefC_25 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
);

typedef _typedefC_26 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
  ffi.Int32,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<ffi.Void>>,
);

typedef _typedefC_27 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
  ffi.Int32,
  ffi.Int32,
);

typedef _typedefC_28 = ffi.Void Function(
  ffi.Pointer<sqlite3_file>,
);

typedef _typedefC_29 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int32,
);

typedef _typedefC_30 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int64,
  ffi.Int32,
  ffi.Pointer<ffi.Pointer<ffi.Void>>,
);

typedef _typedefC_31 = ffi.Int32 Function(
  ffi.Pointer<sqlite3_file>,
  ffi.Int64,
  ffi.Pointer<ffi.Void>,
);
