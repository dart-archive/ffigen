// ignore_for_file: unused_element

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class init_dylib_1 {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  init_dylib_1(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  init_dylib_1.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void test() {
    return _test_1();
  }

  late final _test_ptr = _lookup<ffi.NativeFunction<_c_test1>>('test');
  late final _dart_test1 _test_1 = _test_ptr.asFunction<_dart_test1>();

  void _test() {
    return __test();
  }

  late final __test_ptr = _lookup<ffi.NativeFunction<_c__test>>('_test');
  late final _dart__test __test = __test_ptr.asFunction<_dart__test>();

  void _c_test() {
    return __c_test();
  }

  late final __c_test_ptr = _lookup<ffi.NativeFunction<_c__c_test>>('_c_test');
  late final _dart__c_test __c_test = __c_test_ptr.asFunction<_dart__c_test>();

  void _dart_test() {
    return __dart_test();
  }

  late final __dart_test_ptr =
      _lookup<ffi.NativeFunction<_c__dart_test>>('_dart_test');
  late final _dart__dart_test __dart_test =
      __dart_test_ptr.asFunction<_dart__dart_test>();

  void Test() {
    return _Test();
  }

  late final _Test_ptr = _lookup<ffi.NativeFunction<_c_Test1>>('Test');
  late final _dart_Test _Test = _Test_ptr.asFunction<_dart_Test>();
}

class _Test extends ffi.Struct {
  @ffi.Array.multi([2])
  external ffi.Array<ffi.Int8> array;
}

class ArrayHelperPrefixCollisionTest extends ffi.Opaque {}

abstract class _c_Test {}

abstract class init_dylib {}

typedef _c_test1 = ffi.Void Function();

typedef _dart_test1 = void Function();

typedef _c__test = ffi.Void Function();

typedef _dart__test = void Function();

typedef _c__c_test = ffi.Void Function();

typedef _dart__c_test = void Function();

typedef _c__dart_test = ffi.Void Function();

typedef _dart__dart_test = void Function();

typedef _c_Test1 = ffi.Void Function();

typedef _dart_Test = void Function();
